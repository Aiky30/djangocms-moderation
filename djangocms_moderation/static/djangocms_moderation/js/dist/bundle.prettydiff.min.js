moderationWebpackJsonp([0],{85:function(e,n,t){"use strict";function r(e,n){var t=c.a.stringAsLines(e),r=c.a.stringAsLines(n),i=new c.a.SequenceMatcher(t,r),a=i.get_opcodes();return p({baseTextLines:t,newTextLines:r,opcodes:a,baseTextName:"Published",newTextName:"Current",contextSize:null,viewType:0}).outerHTML}Object.defineProperty(n,"__esModule",{value:!0});var i=t(87),a=t.n(i),l=t(88),o=t.n(l),s=t(86),c=t.n(s),d=t(90),h=t.n(d),u=t(38),f=t.n(u),p=f()(o.a.buildView);n.default={diff:r,styles:a.a,js:h.a}},86:function(e,n){var t={" ":!0,"\t":!0,"\n":!0,"\f":!0,"\r":!0},r={defaultJunkFunction:function(e){return t.hasOwnProperty(e)},stripLinebreaks:function(e){return e.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(e){for(var n=e.indexOf("\n"),t=e.indexOf("\r"),i=n>-1&&t>-1||t<0?"\n":"\r",a=e.split(i),l=0;l<a.length;l++)a[l]=r.stripLinebreaks(a[l]);return a},__reduce:function(e,n,t){if(null!=t)var r=t,i=0;else{if(!n)return null;var r=n[0],i=1}for(;i<n.length;i++)r=e(r,n[i]);return r},__ntuplecomp:function(e,n){for(var t=Math.max(e.length,n.length),r=0;r<t;r++){if(e[r]<n[r])return-1;if(e[r]>n[r])return 1}return e.length==n.length?0:e.length<n.length?-1:1},__calculate_ratio:function(e,n){return n?2*e/n:1},__isindict:function(e){return function(n){return e.hasOwnProperty(n)}},__dictget:function(e,n,t){return e.hasOwnProperty(n)?e[n]:t},SequenceMatcher:function(e,n,t){this.set_seqs=function(e,n){this.set_seq1(e),this.set_seq2(n)},this.set_seq1=function(e){e!=this.a&&(this.a=e,this.matching_blocks=this.opcodes=null)},this.set_seq2=function(e){e!=this.b&&(this.b=e,this.matching_blocks=this.opcodes=this.fullbcount=null,this.__chain_b())},this.__chain_b=function(){for(var e=this.b,n=e.length,t=this.b2j={},i={},a=0;a<e.length;a++){var l=e[a];if(t.hasOwnProperty(l)){var o=t[l];n>=200&&100*o.length>n?(i[l]=1,delete t[l]):o.push(a)}else t[l]=[a]}for(var l in i)i.hasOwnProperty(l)&&delete t[l];var s=this.isjunk,c={};if(s){for(var l in i)i.hasOwnProperty(l)&&s(l)&&(c[l]=1,delete i[l]);for(var l in t)t.hasOwnProperty(l)&&s(l)&&(c[l]=1,delete t[l])}this.isbjunk=r.__isindict(c),this.isbpopular=r.__isindict(i)},this.find_longest_match=function(e,n,t,i){for(var a,l=this.a,o=this.b,s=this.b2j,c=this.isbjunk,d=e,h=t,u=0,f=null,p={},m=[],g=e;g<n;g++){var b={},_=r.__dictget(s,l[g],m);for(var v in _)if(_.hasOwnProperty(v)){if((f=_[v])<t)continue;if(f>=i)break;b[f]=a=r.__dictget(p,f-1,0)+1,a>u&&(d=g-a+1,h=f-a+1,u=a)}p=b}for(;d>e&&h>t&&!c(o[h-1])&&l[d-1]==o[h-1];)d--,h--,u++;for(;d+u<n&&h+u<i&&!c(o[h+u])&&l[d+u]==o[h+u];)u++;for(;d>e&&h>t&&c(o[h-1])&&l[d-1]==o[h-1];)d--,h--,u++;for(;d+u<n&&h+u<i&&c(o[h+u])&&l[d+u]==o[h+u];)u++;return[d,h,u]},this.get_matching_blocks=function(){if(null!=this.matching_blocks)return this.matching_blocks;for(var e,n,t,i,a,l,o,s,c,d=this.a.length,h=this.b.length,u=[[0,d,0,h]],f=[];u.length;)a=u.pop(),e=a[0],n=a[1],t=a[2],i=a[3],c=this.find_longest_match(e,n,t,i),l=c[0],o=c[1],(s=c[2])&&(f.push(c),e<l&&t<o&&u.push([e,l,t,o]),l+s<n&&o+s<i&&u.push([l+s,n,o+s,i]));f.sort(r.__ntuplecomp);var p,m,g,b=0,_=0,v=0,w=0,x=[];for(var C in f)f.hasOwnProperty(C)&&(w=f[C],p=w[0],m=w[1],g=w[2],b+v==p&&_+v==m?v+=g:(v&&x.push([b,_,v]),b=p,_=m,v=g));return v&&x.push([b,_,v]),x.push([d,h,0]),this.matching_blocks=x,this.matching_blocks},this.get_opcodes=function(){if(null!=this.opcodes)return this.opcodes;var e=0,n=0,t=[];this.opcodes=t;var r,i,a,l,o,s=this.get_matching_blocks();for(var c in s)s.hasOwnProperty(c)&&(r=s[c],i=r[0],a=r[1],l=r[2],o="",e<i&&n<a?o="replace":e<i?o="delete":n<a&&(o="insert"),o&&t.push([o,e,i,n,a]),e=i+l,n=a+l,l&&t.push(["equal",i,e,a,n]));return t},this.get_grouped_opcodes=function(e){e||(e=3);var n=this.get_opcodes();n||(n=[["equal",0,1,0,1]]);var t,r,i,a,l,o;"equal"==n[0][0]&&(t=n[0],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],n[0]=[r,Math.max(i,a-e),a,Math.max(l,o-e),o]),"equal"==n[n.length-1][0]&&(t=n[n.length-1],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],n[n.length-1]=[r,i,Math.min(a,i+e),l,Math.min(o,l+e)]);var s=e+e,c=[],d=[];for(var h in n)n.hasOwnProperty(h)&&(t=n[h],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],"equal"==r&&a-i>s&&(c.push([r,i,Math.min(a,i+e),l,Math.min(o,l+e)]),d.push(c),c=[],i=Math.max(i,a-e),l=Math.max(l,o-e)),c.push([r,i,a,l,o]));return!c||1==c.length&&"equal"==c[0][0]||d.push(c),d},this.ratio=function(){return matches=r.__reduce(function(e,n){return e+n[n.length-1]},this.get_matching_blocks(),0),r.__calculate_ratio(matches,this.a.length+this.b.length)},this.quick_ratio=function(){var e,n;if(null==this.fullbcount){this.fullbcount=e={};for(var t=0;t<this.b.length;t++)n=this.b[t],e[n]=r.__dictget(e,n,0)+1}e=this.fullbcount;for(var i={},a=r.__isindict(i),l=numb=0,t=0;t<this.a.length;t++)n=this.a[t],a(n)?numb=i[n]:numb=r.__dictget(e,n,0),i[n]=numb-1,numb>0&&l++;return r.__calculate_ratio(l,this.a.length+this.b.length)},this.real_quick_ratio=function(){var e=this.a.length,n=this.b.length;return _calculate_ratio(Math.min(e,n),e+n)},this.isjunk=t||r.defaultJunkFunction,this.a=this.b=null,this.set_seqs(e,n)}};e.exports=r},87:function(e,n){e.exports="*{@media (max-width:440px){.cms-moderation-controls{left:0}.cms-moderation-controls .cms-toolbar-item-buttons{margin-left:15px!important}}box-sizing:border-box}body{padding:0;margin:0}.texttitle{text-align:left;padding-top:20px;padding-bottom:10px}table{width:100%;min-width:480px;font-size:12px;line-height:20px;color:#032f62;border-collapse:collapse;border:0;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace}th{min-width:60px;white-space:nowrap}td,th{vertical-align:top;padding:0 10px}th:not(.texttitle){text-align:right;color:rgba(27,31,35,.3);font-weight:400}td+th{border-left:1px solid #f6f8fa}td{word-break:break-all;white-space:pre-wrap;width:50%}td.delete,td.replace{background:#ffeef0}.empty+.empty+.replace+.replace,td.insert,td.replace~td.replace{background:#e6ffed}th.delete,th.replace{background-color:#ffdce0}del.diff{text-decoration:none;background-color:#fdb8c0;border-radius:2px}.empty+.empty+.replace,th.insert,th.replace~th.replace{background-color:#cdffd8}ins.diff{text-decoration:none;background-color:#acf2bd;border-radius:2px}.empty{background:#fafbfc}.fold{cursor:pointer}.folded td,.folded th{background-color:#f7f7f7}.folded td{color:rgba(0,0,0,.3)}.folded th.fold{background-color:#ededed}"},88:function(e,n,t){var r=t(86),i=t(89),a={buildView:function(e){function n(e,n){var t=document.createElement(e);return t.className=n,t}function t(e,n){var t=document.createElement(e);return t.appendChild(document.createTextNode(n)),t}function a(e,n,t){var r=document.createElement(e);return r.className=n,r.appendChild(document.createTextNode(t)),r}function l(e,n,t){var r=document.createElement(e);return r.className=n,r.innerHTML+=t,r}function o(e,t,r,i,l,o){return t<r?("equal"===l&&0===o?(e.appendChild(a("th",l+" fold","- "+(t+1).toString())),e.appendChild(a("td",l,i[t].replace(/\t/g,"    ")))):(e.appendChild(a("th",l,(t+1).toString())),e.appendChild(a("td",l,i[t].replace(/\t/g,"    ")))),t+1):(e.appendChild(n("th","empty")),e.appendChild(n("td","empty")),t)}function s(e,t,r,i,a){return t<r?(e.appendChild(l("th",a,(t+1).toString())),e.appendChild(l("td",a,i.replace(/\t/g,"    "))),t+1):(e.appendChild(n("th","empty")),e.appendChild(n("td","empty")),t)}function c(e,n,r,i,l){e.appendChild(t("th",null==n?"":(n+1).toString())),e.appendChild(t("th",null==r?"":(r+1).toString())),e.appendChild(a("td",l,i[null!=n?n:r].replace(/\t/g,"    ")))}var d=e.baseTextLines,h=e.newTextLines,u=e.opcodes,f=e.baseTextName?e.baseTextName:"Base Text",p=e.newTextName?e.newTextName:"New Text",m=e.contextSize,g=0==e.viewType||1==e.viewType?e.viewType:0;if(null==d)throw new Error("Cannot build diff view; baseTextLines is not defined.");if(null==h)throw new Error("Cannot build diff view; newTextLines is not defined.");if(!u)throw new Error("Cannot build diff view; opcodes is not defined.");var b=document.createElement("thead"),_=document.createElement("tr");b.appendChild(_),g?(_.appendChild(document.createElement("th")),_.appendChild(document.createElement("th")),_.appendChild(a("th","texttitle",f+" vs. "+p))):(_.appendChild(document.createElement("th")),_.appendChild(a("th","texttitle",f)),_.appendChild(document.createElement("th")),_.appendChild(a("th","texttitle",p))),b=[b];for(var v,w=[],x=0;x<u.length;x++){for(var C=u[x],y=C[0],k=C[1],T=C[2],E=C[3],O=C[4],N=Math.max(T-k,O-E),M=[],L=[],q=0;q<N;q++){if(m&&u.length>1&&(x>0&&q==m||0==x&&0==q)&&"equal"==y){var S=N-(0==x?1:2)*m;if(S>1){if(M.push(_=document.createElement("tr")),k+=S,E+=S,q+=S-1,_.appendChild(t("th","...")),g||_.appendChild(a("td","skip","")),_.appendChild(t("th","...")),_.appendChild(a("td","skip","")),x+1==u.length)break;continue}}if(M.push(_=document.createElement("tr")),g)"insert"==y?c(_,null,E++,h,y):"replace"==y?(L.push(v=document.createElement("tr")),k<T&&c(_,k++,null,d,"delete"),E<O&&c(v,null,E++,h,"insert")):"delete"==y?c(_,k++,null,d,y):c(_,k++,E++,d,y);else if("replace"===y){var R=new r.SequenceMatcher(d[k],h[E]);if(T-k==O-E&&R.ratio()>.6){for(var P=R.get_opcodes(),U="",A="",B=0;B<P.length;B++)for(var j=P[B],F=j[0],W=j[1],X=j[2],$=j[3],z=j[4],H=Math.max(X-W,z-$),I=d[k].split(""),J=h[E].split(""),D=0;D<H;D++)"insert"==F?(U.match(/<\/ins>$/)?U=U.slice(0,-6):U+='<ins class="diff">',U+=i(J[$++]||""),U+="</ins>"):"replace"==F?(W<X&&(A.match(/<\/del>$/)?A=A.slice(0,-6):A+='<del class="diff">',A+=i(I[W++]||""),A+="</del>"),$<z&&(U.match(/<\/ins>$/)?U=U.slice(0,-6):U+='<ins class="diff">',U+=i(J[$++]||""),U+="</ins>")):"delete"==F?(A.match(/<\/del>$/)?A=A.slice(0,-6):A+='<del class="diff">',A+=i(I[$++]||""),A+="</del>"):(A+=i(I[W]||""),U+=i(I[W++]||""));k=s(_,k,T,A,y),E=s(_,E,O,U,y)}else k=o(_,k,T,d,y,q),E=o(_,E,O,h,y)}else k=o(_,k,T,d,y,q),E=o(_,E,O,h,y)}for(var q=0;q<M.length;q++)w.push(M[q]);for(var q=0;q<L.length;q++)w.push(L[q])}b.push(_=document.createElement("tbody"));for(var x in w)w.hasOwnProperty(x)&&_.appendChild(w[x]);_=n("table","diff"+(g?" inlinediff":""));for(var x in b)b.hasOwnProperty(x)&&_.appendChild(b[x]);return _}};e.exports=a},89:function(e,n,t){"use strict";function r(e){var n=""+e,t=i.exec(n);if(!t)return n;var r,a="",l=0,o=0;for(l=t.index;l<n.length;l++){switch(n.charCodeAt(l)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 39:r="&#39;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}o!==l&&(a+=n.substring(o,l)),o=l+1,a+=r}return o!==l?a+n.substring(o,l):a}var i=/["'&<>]/;e.exports=r},90:function(e,n){e.exports="(function dom__init() {\n    'use strict';\n\n    var MIN_ROWS_TO_HIDE = 5;\n    var NUMBER_OF_CONTEXT_ROWS = 5;\n    var nextUntil = function nextUntil(element, predicate) {\n        var next = [];\n        var el = element;\n\n        while (el.nextSibling && !predicate(el.nextSibling)) {\n            el = el.nextSibling;\n            next.push(el);\n        }\n\n        return next;\n    };\n\n    /**\n     * dropRight\n     *\n     * @public\n     * @param {Array} array\n     * @param {Number} n\n     * @returns {Array}\n     */\n    function dropRight(array, n) {\n        return array.length ? array.slice(0, n < 0 ? 0 : -n) : [];\n    }\n\n    /**\n     * drop\n     *\n     * @public\n     * @param {Array} array\n     * @param {Number} n\n     * @returns {Array}\n     */\n    function drop(array, n) {\n        return array.length ? array.slice(n < 0 ? 0 : n, array.length) : [];\n    }\n\n    // namespace to test for web browser features for progressive enhancement\n    // namespace for event handlers\n    var event = {\n        // allows visual folding of consecutive equal lines in a diff report\n        difffold: function dom__event_difffold() {\n            var row = this.parentNode;\n            var rows;\n\n            if (row.classList.contains('folded')) {\n                row.classList.remove('folded');\n                this.textContent = this.textContent.replace('+', '-');\n\n                rows = nextUntil(row, function(r) {\n                    if (r.classList.contains('foldable')) {\n                        return false;\n                    }\n                    return true;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'table-row';\n                });\n            } else {\n                row.classList.add('folded');\n                this.textContent = this.textContent.replace('-', '+');\n\n                rows = nextUntil(row, function(r) {\n                    if (r.classList.contains('foldable')) {\n                        return false;\n                    }\n                    return true;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'none';\n                });\n            }\n        },\n    };\n\n    // alter tool on page load in reflection to saved state\n    var load = function() {\n        var difflist = document.getElementsByTagName('table');\n\n        if (!difflist.length) {\n            return;\n        }\n        var cells = difflist[0].getElementsByTagName('th');\n\n        var foldableCells = Array.from(cells).filter(function(cell) {\n            return cell.classList.contains('fold');\n        });\n\n        foldableCells.forEach(function(cell, i) {\n            if (cell.classList.contains('equal')) {\n                var currentRow = cell.parentNode;\n                var rows = nextUntil(cell.parentNode, function(r) {\n                    var ths = r.getElementsByTagName('th');\n\n                    if (ths && ths.length) {\n                        var cls = ths[0].className;\n\n                        if (cls && !cls.match('equal')) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                });\n\n                if (i === 0) {\n                    rows = dropRight(rows, NUMBER_OF_CONTEXT_ROWS);\n                } else if (i === foldableCells.length - 1) {\n                    rows = drop(rows, NUMBER_OF_CONTEXT_ROWS - 1);\n                } else {\n                    rows = drop(dropRight(rows, NUMBER_OF_CONTEXT_ROWS), NUMBER_OF_CONTEXT_ROWS - 1);\n                }\n\n                if (currentRow.nextSibling === rows[0]) {\n                    currentRow.classList.add('foldable');\n                } else if (rows.length) {\n                    cell.classList.remove('fold');\n                    cell.textContent = cell.textContent.replace('- ', '');\n                    cell = rows[0].children[0]; // eslint-disable-line no-param-reassign\n                    cell.classList.add('fold');\n                    cell.textContent = '- ' + cell.textContent;\n                }\n\n                cell.onclick = event.difffold;\n\n                rows.forEach(function(row) {\n                    row.classList.add('foldable');\n                });\n\n                if (rows.length > MIN_ROWS_TO_HIDE) {\n                    cell.onclick();\n                } else {\n                    cell.classList.remove('fold');\n                    currentRow.classList.remove('foldable');\n                    cell.textContent = cell.textContent.replace('- ', '');\n                }\n            }\n        });\n    };\n\n    window.onload = load;\n})();\n"}});