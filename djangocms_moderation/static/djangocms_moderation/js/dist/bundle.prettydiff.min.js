moderationWebpackJsonp([0],{

/***/ 83:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__css_source_css__ = __webpack_require__(85);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__css_source_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__css_source_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__libs_diffview__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__libs_diffview___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__libs_diffview__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__libs_difflib__ = __webpack_require__(84);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__libs_difflib___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__libs_difflib__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__libs_api_dom__ = __webpack_require__(87);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__libs_api_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__libs_api_dom__);\n// import rawAPI from './libs/api/dom';\n\n\n\n\n\n/**\n                                  * Returns markup of a diff view\n                                  *\n                                  * @public\n                                  * @param {String} before\n                                  * @param {String} after\n                                  * @returns {String}\n                                  */\nfunction diff(before, after) {\n    var beforeLines = __WEBPACK_IMPORTED_MODULE_2__libs_difflib___default.a.stringAsLines(before);\n    var afterLines = __WEBPACK_IMPORTED_MODULE_2__libs_difflib___default.a.stringAsLines(after);\n    var sm = new __WEBPACK_IMPORTED_MODULE_2__libs_difflib___default.a.SequenceMatcher(beforeLines, afterLines);\n    var opcodes = sm.get_opcodes();\n\n    return __WEBPACK_IMPORTED_MODULE_1__libs_diffview___default.a.buildView({\n        baseTextLines: beforeLines,\n        newTextLines: afterLines,\n        opcodes: opcodes,\n        baseTextName: 'Published',\n        newTextName: 'Current',\n        contextSize: null,\n        viewType: 0 }).\n    outerHTML;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    diff: diff,\n    styles: __WEBPACK_IMPORTED_MODULE_0__css_source_css___default.a,\n    js: __WEBPACK_IMPORTED_MODULE_3__libs_api_dom___default.a });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZGphbmdvY21zX21vZGVyYXRpb24vc3RhdGljL2RqYW5nb2Ntc19tb2RlcmF0aW9uL2pzL3ByZXR0eWRpZmYuanM/ZTgwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgcmF3QVBJIGZyb20gJy4vbGlicy9hcGkvZG9tJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi4vY3NzL3NvdXJjZS5jc3MnO1xuaW1wb3J0IGRpZmZ2aWV3IGZyb20gJy4vbGlicy9kaWZmdmlldyc7XG5pbXBvcnQgZGlmZmxpYiBmcm9tICcuL2xpYnMvZGlmZmxpYic7XG5pbXBvcnQganMgZnJvbSAnLi9saWJzL2FwaS9kb20nO1xuXG4vKipcbiAqIFJldHVybnMgbWFya3VwIG9mIGEgZGlmZiB2aWV3XG4gKlxuICogQHB1YmxpY1xuICogQHBhcmFtIHtTdHJpbmd9IGJlZm9yZVxuICogQHBhcmFtIHtTdHJpbmd9IGFmdGVyXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICovXG5mdW5jdGlvbiBkaWZmKGJlZm9yZSwgYWZ0ZXIpIHtcbiAgICBjb25zdCBiZWZvcmVMaW5lcyA9IGRpZmZsaWIuc3RyaW5nQXNMaW5lcyhiZWZvcmUpO1xuICAgIGNvbnN0IGFmdGVyTGluZXMgPSBkaWZmbGliLnN0cmluZ0FzTGluZXMoYWZ0ZXIpO1xuICAgIGNvbnN0IHNtID0gbmV3IGRpZmZsaWIuU2VxdWVuY2VNYXRjaGVyKGJlZm9yZUxpbmVzLCBhZnRlckxpbmVzKTtcbiAgICBjb25zdCBvcGNvZGVzID0gc20uZ2V0X29wY29kZXMoKTtcblxuICAgIHJldHVybiBkaWZmdmlldy5idWlsZFZpZXcoe1xuICAgICAgICBiYXNlVGV4dExpbmVzOiBiZWZvcmVMaW5lcyxcbiAgICAgICAgbmV3VGV4dExpbmVzOiBhZnRlckxpbmVzLFxuICAgICAgICBvcGNvZGVzOiBvcGNvZGVzLFxuICAgICAgICBiYXNlVGV4dE5hbWU6ICdQdWJsaXNoZWQnLFxuICAgICAgICBuZXdUZXh0TmFtZTogJ0N1cnJlbnQnLFxuICAgICAgICBjb250ZXh0U2l6ZTogbnVsbCxcbiAgICAgICAgdmlld1R5cGU6IDBcbiAgICB9KS5vdXRlckhUTUw7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBkaWZmLFxuICAgIHN0eWxlcyxcbiAgICBqc1xufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBkamFuZ29jbXNfbW9kZXJhdGlvbi9zdGF0aWMvZGphbmdvY21zX21vZGVyYXRpb24vanMvcHJldHR5ZGlmZi5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7O0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///83\n");

/***/ }),

/***/ 84:
/***/ (function(module, exports) {

eval("/***\nThis is part of jsdifflib v1.0. <http://snowtide.com/jsdifflib>\n\nCopyright (c) 2007, Snowtide Informatics Systems, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n\t* Redistributions of source code must retain the above copyright notice, this\n\t\tlist of conditions and the following disclaimer.\n\t* Redistributions in binary form must reproduce the above copyright notice,\n\t\tthis list of conditions and the following disclaimer in the documentation\n\t\tand/or other materials provided with the distribution.\n\t* Neither the name of the Snowtide Informatics Systems nor the names of its\n\t\tcontributors may be used to endorse or promote products derived from this\n\t\tsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\nSHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n***/\n/* Author: Chas Emerick <cemerick@snowtide.com> */\nvar __whitespace = {\" \":true, \"\\t\":true, \"\\n\":true, \"\\f\":true, \"\\r\":true};\n\nvar difflib = {\n\tdefaultJunkFunction: function (c) {\n\t\treturn __whitespace.hasOwnProperty(c);\n\t},\n\n\tstripLinebreaks: function (str) { return str.replace(/^[\\n\\r]*|[\\n\\r]*$/g, \"\"); },\n\n\tstringAsLines: function (str) {\n\t\tvar lfpos = str.indexOf(\"\\n\");\n\t\tvar crpos = str.indexOf(\"\\r\");\n\t\tvar linebreak = ((lfpos > -1 && crpos > -1) || crpos < 0) ? \"\\n\" : \"\\r\";\n\n\t\tvar lines = str.split(linebreak);\n\t\tfor (var i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = difflib.stripLinebreaks(lines[i]);\n\t\t}\n\n\t\treturn lines;\n\t},\n\n\t// iteration-based reduce implementation\n\t__reduce: function (func, list, initial) {\n\t\tif (initial != null) {\n\t\t\tvar value = initial;\n\t\t\tvar idx = 0;\n\t\t} else if (list) {\n\t\t\tvar value = list[0];\n\t\t\tvar idx = 1;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (; idx < list.length; idx++) {\n\t\t\tvalue = func(value, list[idx]);\n\t\t}\n\n\t\treturn value;\n\t},\n\n\t// comparison function for sorting lists of numeric tuples\n\t__ntuplecomp: function (a, b) {\n\t\tvar mlen = Math.max(a.length, b.length);\n\t\tfor (var i = 0; i < mlen; i++) {\n\t\t\tif (a[i] < b[i]) return -1;\n\t\t\tif (a[i] > b[i]) return 1;\n\t\t}\n\n\t\treturn a.length == b.length ? 0 : (a.length < b.length ? -1 : 1);\n\t},\n\n\t__calculate_ratio: function (matches, length) {\n\t\treturn length ? 2.0 * matches / length : 1.0;\n\t},\n\n\t// returns a function that returns true if a key passed to the returned function\n\t// is in the dict (js object) provided to this function; replaces being able to\n\t// carry around dict.has_key in python...\n\t__isindict: function (dict) {\n\t\treturn function (key) { return dict.hasOwnProperty(key); };\n\t},\n\n\t// replacement for python's dict.get function -- need easy default values\n\t__dictget: function (dict, key, defaultValue) {\n\t\treturn dict.hasOwnProperty(key) ? dict[key] : defaultValue;\n\t},\n\n\tSequenceMatcher: function (a, b, isjunk) {\n\t\tthis.set_seqs = function (a, b) {\n\t\t\tthis.set_seq1(a);\n\t\t\tthis.set_seq2(b);\n\t\t}\n\n\t\tthis.set_seq1 = function (a) {\n\t\t\tif (a == this.a) return;\n\t\t\tthis.a = a;\n\t\t\tthis.matching_blocks = this.opcodes = null;\n\t\t}\n\n\t\tthis.set_seq2 = function (b) {\n\t\t\tif (b == this.b) return;\n\t\t\tthis.b = b;\n\t\t\tthis.matching_blocks = this.opcodes = this.fullbcount = null;\n\t\t\tthis.__chain_b();\n\t\t}\n\n\t\tthis.__chain_b = function () {\n\t\t\tvar b = this.b;\n\t\t\tvar n = b.length;\n\t\t\tvar b2j = this.b2j = {};\n\t\t\tvar populardict = {};\n\t\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\t\tvar elt = b[i];\n\t\t\t\tif (b2j.hasOwnProperty(elt)) {\n\t\t\t\t\tvar indices = b2j[elt];\n\t\t\t\t\tif (n >= 200 && indices.length * 100 > n) {\n\t\t\t\t\t\tpopulardict[elt] = 1;\n\t\t\t\t\t\tdelete b2j[elt];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tindices.push(i);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tb2j[elt] = [i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var elt in populardict) {\n\t\t\t\tif (populardict.hasOwnProperty(elt)) {\n\t\t\t\t\tdelete b2j[elt];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar isjunk = this.isjunk;\n\t\t\tvar junkdict = {};\n\t\t\tif (isjunk) {\n\t\t\t\tfor (var elt in populardict) {\n\t\t\t\t\tif (populardict.hasOwnProperty(elt) && isjunk(elt)) {\n\t\t\t\t\t\tjunkdict[elt] = 1;\n\t\t\t\t\t\tdelete populardict[elt];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var elt in b2j) {\n\t\t\t\t\tif (b2j.hasOwnProperty(elt) && isjunk(elt)) {\n\t\t\t\t\t\tjunkdict[elt] = 1;\n\t\t\t\t\t\tdelete b2j[elt];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.isbjunk = difflib.__isindict(junkdict);\n\t\t\tthis.isbpopular = difflib.__isindict(populardict);\n\t\t}\n\n\t\tthis.find_longest_match = function (alo, ahi, blo, bhi) {\n\t\t\tvar a = this.a;\n\t\t\tvar b = this.b;\n\t\t\tvar b2j = this.b2j;\n\t\t\tvar isbjunk = this.isbjunk;\n\t\t\tvar besti = alo;\n\t\t\tvar bestj = blo;\n\t\t\tvar bestsize = 0;\n\t\t\tvar j = null;\n\t\t\tvar k;\n\n\t\t\tvar j2len = {};\n\t\t\tvar nothing = [];\n\t\t\tfor (var i = alo; i < ahi; i++) {\n\t\t\t\tvar newj2len = {};\n\t\t\t\tvar jdict = difflib.__dictget(b2j, a[i], nothing);\n\t\t\t\tfor (var jkey in jdict) {\n\t\t\t\t\tif (jdict.hasOwnProperty(jkey)) {\n\t\t\t\t\t\tj = jdict[jkey];\n\t\t\t\t\t\tif (j < blo) continue;\n\t\t\t\t\t\tif (j >= bhi) break;\n\t\t\t\t\t\tnewj2len[j] = k = difflib.__dictget(j2len, j - 1, 0) + 1;\n\t\t\t\t\t\tif (k > bestsize) {\n\t\t\t\t\t\t\tbesti = i - k + 1;\n\t\t\t\t\t\t\tbestj = j - k + 1;\n\t\t\t\t\t\t\tbestsize = k;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tj2len = newj2len;\n\t\t\t}\n\n\t\t\twhile (besti > alo && bestj > blo && !isbjunk(b[bestj - 1]) && a[besti - 1] == b[bestj - 1]) {\n\t\t\t\tbesti--;\n\t\t\t\tbestj--;\n\t\t\t\tbestsize++;\n\t\t\t}\n\n\t\t\twhile (besti + bestsize < ahi && bestj + bestsize < bhi &&\n\t\t\t\t\t!isbjunk(b[bestj + bestsize]) &&\n\t\t\t\t\ta[besti + bestsize] == b[bestj + bestsize]) {\n\t\t\t\tbestsize++;\n\t\t\t}\n\n\t\t\twhile (besti > alo && bestj > blo && isbjunk(b[bestj - 1]) && a[besti - 1] == b[bestj - 1]) {\n\t\t\t\tbesti--;\n\t\t\t\tbestj--;\n\t\t\t\tbestsize++;\n\t\t\t}\n\n\t\t\twhile (besti + bestsize < ahi && bestj + bestsize < bhi && isbjunk(b[bestj + bestsize]) &&\n\t\t\t\t\ta[besti + bestsize] == b[bestj + bestsize]) {\n\t\t\t\tbestsize++;\n\t\t\t}\n\n\t\t\treturn [besti, bestj, bestsize];\n\t\t}\n\n\t\tthis.get_matching_blocks = function () {\n\t\t\tif (this.matching_blocks != null) return this.matching_blocks;\n\t\t\tvar la = this.a.length;\n\t\t\tvar lb = this.b.length;\n\n\t\t\tvar queue = [[0, la, 0, lb]];\n\t\t\tvar matching_blocks = [];\n\t\t\tvar alo, ahi, blo, bhi, qi, i, j, k, x;\n\t\t\twhile (queue.length) {\n\t\t\t\tqi = queue.pop();\n\t\t\t\talo = qi[0];\n\t\t\t\tahi = qi[1];\n\t\t\t\tblo = qi[2];\n\t\t\t\tbhi = qi[3];\n\t\t\t\tx = this.find_longest_match(alo, ahi, blo, bhi);\n\t\t\t\ti = x[0];\n\t\t\t\tj = x[1];\n\t\t\t\tk = x[2];\n\n\t\t\t\tif (k) {\n\t\t\t\t\tmatching_blocks.push(x);\n\t\t\t\t\tif (alo < i && blo < j)\n\t\t\t\t\t\tqueue.push([alo, i, blo, j]);\n\t\t\t\t\tif (i+k < ahi && j+k < bhi)\n\t\t\t\t\t\tqueue.push([i + k, ahi, j + k, bhi]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmatching_blocks.sort(difflib.__ntuplecomp);\n\n\t\t\tvar i1 = 0, j1 = 0, k1 = 0, block = 0;\n\t\t\tvar i2, j2, k2;\n\t\t\tvar non_adjacent = [];\n\t\t\tfor (var idx in matching_blocks) {\n\t\t\t\tif (matching_blocks.hasOwnProperty(idx)) {\n\t\t\t\t\tblock = matching_blocks[idx];\n\t\t\t\t\ti2 = block[0];\n\t\t\t\t\tj2 = block[1];\n\t\t\t\t\tk2 = block[2];\n\t\t\t\t\tif (i1 + k1 == i2 && j1 + k1 == j2) {\n\t\t\t\t\t\tk1 += k2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (k1) non_adjacent.push([i1, j1, k1]);\n\t\t\t\t\t\ti1 = i2;\n\t\t\t\t\t\tj1 = j2;\n\t\t\t\t\t\tk1 = k2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (k1) non_adjacent.push([i1, j1, k1]);\n\n\t\t\tnon_adjacent.push([la, lb, 0]);\n\t\t\tthis.matching_blocks = non_adjacent;\n\t\t\treturn this.matching_blocks;\n\t\t}\n\n\t\tthis.get_opcodes = function () {\n\t\t\tif (this.opcodes != null) return this.opcodes;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\tvar answer = [];\n\t\t\tthis.opcodes = answer;\n\t\t\tvar block, ai, bj, size, tag;\n\t\t\tvar blocks = this.get_matching_blocks();\n\t\t\tfor (var idx in blocks) {\n\t\t\t\tif (blocks.hasOwnProperty(idx)) {\n\t\t\t\t\tblock = blocks[idx];\n\t\t\t\t\tai = block[0];\n\t\t\t\t\tbj = block[1];\n\t\t\t\t\tsize = block[2];\n\t\t\t\t\ttag = '';\n\t\t\t\t\tif (i < ai && j < bj) {\n\t\t\t\t\t\ttag = 'replace';\n\t\t\t\t\t} else if (i < ai) {\n\t\t\t\t\t\ttag = 'delete';\n\t\t\t\t\t} else if (j < bj) {\n\t\t\t\t\t\ttag = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (tag) answer.push([tag, i, ai, j, bj]);\n\t\t\t\t\ti = ai + size;\n\t\t\t\t\tj = bj + size;\n\n\t\t\t\t\tif (size) answer.push(['equal', ai, i, bj, j]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn answer;\n\t\t}\n\n\t\t// this is a generator function in the python lib, which of course is not supported in javascript\n\t\t// the reimplementation builds up the grouped opcodes into a list in their entirety and returns that.\n\t\tthis.get_grouped_opcodes = function (n) {\n\t\t\tif (!n) n = 3;\n\t\t\tvar codes = this.get_opcodes();\n\t\t\tif (!codes) codes = [[\"equal\", 0, 1, 0, 1]];\n\t\t\tvar code, tag, i1, i2, j1, j2;\n\t\t\tif (codes[0][0] == 'equal') {\n\t\t\t\tcode = codes[0];\n\t\t\t\ttag = code[0];\n\t\t\t\ti1 = code[1];\n\t\t\t\ti2 = code[2];\n\t\t\t\tj1 = code[3];\n\t\t\t\tj2 = code[4];\n\t\t\t\tcodes[0] = [tag, Math.max(i1, i2 - n), i2, Math.max(j1, j2 - n), j2];\n\t\t\t}\n\t\t\tif (codes[codes.length - 1][0] == 'equal') {\n\t\t\t\tcode = codes[codes.length - 1];\n\t\t\t\ttag = code[0];\n\t\t\t\ti1 = code[1];\n\t\t\t\ti2 = code[2];\n\t\t\t\tj1 = code[3];\n\t\t\t\tj2 = code[4];\n\t\t\t\tcodes[codes.length - 1] = [tag, i1, Math.min(i2, i1 + n), j1, Math.min(j2, j1 + n)];\n\t\t\t}\n\n\t\t\tvar nn = n + n;\n\t\t\tvar group = [];\n\t\t\tvar groups = [];\n\t\t\tfor (var idx in codes) {\n\t\t\t\tif (codes.hasOwnProperty(idx)) {\n\t\t\t\t\tcode = codes[idx];\n\t\t\t\t\ttag = code[0];\n\t\t\t\t\ti1 = code[1];\n\t\t\t\t\ti2 = code[2];\n\t\t\t\t\tj1 = code[3];\n\t\t\t\t\tj2 = code[4];\n\t\t\t\t\tif (tag == 'equal' && i2 - i1 > nn) {\n\t\t\t\t\t\tgroup.push([tag, i1, Math.min(i2, i1 + n), j1, Math.min(j2, j1 + n)]);\n\t\t\t\t\t\tgroups.push(group);\n\t\t\t\t\t\tgroup = [];\n\t\t\t\t\t\ti1 = Math.max(i1, i2-n);\n\t\t\t\t\t\tj1 = Math.max(j1, j2-n);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup.push([tag, i1, i2, j1, j2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (group && !(group.length == 1 && group[0][0] == 'equal')) groups.push(group)\n\n\t\t\treturn groups;\n\t\t}\n\n\t\tthis.ratio = function () {\n\t\t\tmatches = difflib.__reduce(\n\t\t\t\t\t\t\tfunction (sum, triple) { return sum + triple[triple.length - 1]; },\n\t\t\t\t\t\t\tthis.get_matching_blocks(), 0);\n\t\t\treturn difflib.__calculate_ratio(matches, this.a.length + this.b.length);\n\t\t}\n\n\t\tthis.quick_ratio = function () {\n\t\t\tvar fullbcount, elt;\n\t\t\tif (this.fullbcount == null) {\n\t\t\t\tthis.fullbcount = fullbcount = {};\n\t\t\t\tfor (var i = 0; i < this.b.length; i++) {\n\t\t\t\t\telt = this.b[i];\n\t\t\t\t\tfullbcount[elt] = difflib.__dictget(fullbcount, elt, 0) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfullbcount = this.fullbcount;\n\n\t\t\tvar avail = {};\n\t\t\tvar availhas = difflib.__isindict(avail);\n\t\t\tvar matches = numb = 0;\n\t\t\tfor (var i = 0; i < this.a.length; i++) {\n\t\t\t\telt = this.a[i];\n\t\t\t\tif (availhas(elt)) {\n\t\t\t\t\tnumb = avail[elt];\n\t\t\t\t} else {\n\t\t\t\t\tnumb = difflib.__dictget(fullbcount, elt, 0);\n\t\t\t\t}\n\t\t\t\tavail[elt] = numb - 1;\n\t\t\t\tif (numb > 0) matches++;\n\t\t\t}\n\n\t\t\treturn difflib.__calculate_ratio(matches, this.a.length + this.b.length);\n\t\t}\n\n\t\tthis.real_quick_ratio = function () {\n\t\t\tvar la = this.a.length;\n\t\t\tvar lb = this.b.length;\n\t\t\treturn _calculate_ratio(Math.min(la, lb), la + lb);\n\t\t}\n\n\t\tthis.isjunk = isjunk ? isjunk : difflib.defaultJunkFunction;\n\t\tthis.a = this.b = null;\n\t\tthis.set_seqs(a, b);\n\t}\n};\n\nmodule.exports = difflib;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///84\n");

/***/ }),

/***/ 85:
/***/ (function(module, exports) {

eval("module.exports = \"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n  padding: 0px;\\n  margin: 0;\\n}\\n\\n.texttitle {\\n    text-align: left;\\n    padding-top: 20px;\\n    padding-bottom: 10px;\\n}\\ntable {\\n    width: 100%;\\n    font-size: 12px;\\n    line-height: 20px;\\n    color: #032f62;\\n    border-collapse: collapse;\\n    border: 0;\\n    font-family: \\\"SFMono-Regular\\\",\\n        Consolas,\\n        \\\"Liberation Mono\\\",\\n        Menlo,\\n        Courier,\\n        monospace;\\n}\\nth {\\n    min-width: 50px;\\n    white-space: nowrap;\\n}\\nth,\\ntd {\\n    vertical-align: top;\\n    padding: 0 10px;\\n}\\nth:not(.texttitle) {\\n    text-align: right;\\n    color: rgba(27, 31, 35, 0.3);\\n    font-weight: normal;\\n}\\ntd + th {\\n    border-left: 1px solid #f6f8fa;\\n}\\ntd {\\n    word-break: break-all;\\n    white-space: pre-wrap;\\n}\\ntd.replace,\\ntd.delete {\\n    background: #ffeef0;\\n}\\ntd.replace ~ td.replace,\\ntd.insert {\\n    background: #e6ffed;\\n}\\n\\nth.replace,\\nth.delete {\\n    background-color: #ffdce0;\\n}\\nth.replace ~ th.replace,\\nth.insert {\\n    background-color: #cdffd8;\\n}\\n.empty {\\n    background: #fafbfc;\\n}\\n\\n.fold {\\n    cursor: pointer;\\n}\\n.folded td, .folded th {\\n    /* background-color: #f1f8ff; */\\n    background-color: #f7f7f7;\\n}\\n.folded td {\\n    color: rgba(0,0,0,0.3);\\n}\\n.folded th.fold {\\n    /* background-color: #dbedff; */\\n    background-color: #ededed;\\n}\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kamFuZ29jbXNfbW9kZXJhdGlvbi9zdGF0aWMvZGphbmdvY21zX21vZGVyYXRpb24vY3NzL3NvdXJjZS5jc3M/MDY5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IFwiKiB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgcGFkZGluZzogMHB4O1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4udGV4dHRpdGxlIHtcXG4gICAgdGV4dC1hbGlnbjogbGVmdDtcXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XFxuICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xcbn1cXG50YWJsZSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBmb250LXNpemU6IDEycHg7XFxuICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xcbiAgICBjb2xvcjogIzAzMmY2MjtcXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gICAgYm9yZGVyOiAwO1xcbiAgICBmb250LWZhbWlseTogXFxcIlNGTW9uby1SZWd1bGFyXFxcIixcXG4gICAgICAgIENvbnNvbGFzLFxcbiAgICAgICAgXFxcIkxpYmVyYXRpb24gTW9ub1xcXCIsXFxuICAgICAgICBNZW5sbyxcXG4gICAgICAgIENvdXJpZXIsXFxuICAgICAgICBtb25vc3BhY2U7XFxufVxcbnRoIHtcXG4gICAgbWluLXdpZHRoOiA1MHB4O1xcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xcbn1cXG50aCxcXG50ZCB7XFxuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XFxuICAgIHBhZGRpbmc6IDAgMTBweDtcXG59XFxudGg6bm90KC50ZXh0dGl0bGUpIHtcXG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XFxuICAgIGNvbG9yOiByZ2JhKDI3LCAzMSwgMzUsIDAuMyk7XFxuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XFxufVxcbnRkICsgdGgge1xcbiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNmNmY4ZmE7XFxufVxcbnRkIHtcXG4gICAgd29yZC1icmVhazogYnJlYWstYWxsO1xcbiAgICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XFxufVxcbnRkLnJlcGxhY2UsXFxudGQuZGVsZXRlIHtcXG4gICAgYmFja2dyb3VuZDogI2ZmZWVmMDtcXG59XFxudGQucmVwbGFjZSB+IHRkLnJlcGxhY2UsXFxudGQuaW5zZXJ0IHtcXG4gICAgYmFja2dyb3VuZDogI2U2ZmZlZDtcXG59XFxuXFxudGgucmVwbGFjZSxcXG50aC5kZWxldGUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZkY2UwO1xcbn1cXG50aC5yZXBsYWNlIH4gdGgucmVwbGFjZSxcXG50aC5pbnNlcnQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2RmZmQ4O1xcbn1cXG4uZW1wdHkge1xcbiAgICBiYWNrZ3JvdW5kOiAjZmFmYmZjO1xcbn1cXG5cXG4uZm9sZCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuLmZvbGRlZCB0ZCwgLmZvbGRlZCB0aCB7XFxuICAgIC8qIGJhY2tncm91bmQtY29sb3I6ICNmMWY4ZmY7ICovXFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3Zjc7XFxufVxcbi5mb2xkZWQgdGQge1xcbiAgICBjb2xvcjogcmdiYSgwLDAsMCwwLjMpO1xcbn1cXG4uZm9sZGVkIHRoLmZvbGQge1xcbiAgICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjZGJlZGZmOyAqL1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZWRlZGVkO1xcbn1cXG5cIlxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZGphbmdvY21zX21vZGVyYXRpb24vc3RhdGljL2RqYW5nb2Ntc19tb2RlcmF0aW9uL2Nzcy9zb3VyY2UuY3NzXG4vLyBtb2R1bGUgaWQgPSA4NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85\n");

/***/ }),

/***/ 86:
/***/ (function(module, exports) {

eval("/*\nThis is part of jsdifflib v1.0. <http://github.com/cemerick/jsdifflib>\n\nCopyright 2007 - 2011 Chas Emerick <cemerick@snowtide.com>. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n      conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n      of conditions and the following disclaimer in the documentation and/or other materials\n      provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY Chas Emerick ``AS IS'' AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Chas Emerick OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the\nauthors and should not be interpreted as representing official policies, either expressed\nor implied, of Chas Emerick.\n*/\nvar diffview = {\n\t/**\n\t * Builds and returns a visual diff view.  The single parameter, `params', should contain\n\t * the following values:\n\t *\n\t * - baseTextLines: the array of strings that was used as the base text input to SequenceMatcher\n\t * - newTextLines: the array of strings that was used as the new text input to SequenceMatcher\n\t * - opcodes: the array of arrays returned by SequenceMatcher.get_opcodes()\n\t * - baseTextName: the title to be displayed above the base text listing in the diff view; defaults\n\t *\t   to \"Base Text\"\n\t * - newTextName: the title to be displayed above the new text listing in the diff view; defaults\n\t *\t   to \"New Text\"\n\t * - contextSize: the number of lines of context to show around differences; by default, all lines\n\t *\t   are shown\n\t * - viewType: if 0, a side-by-side diff view is generated (default); if 1, an inline diff view is\n\t *\t   generated\n\t */\n\tbuildView: function (params) {\n\t\tvar baseTextLines = params.baseTextLines;\n\t\tvar newTextLines = params.newTextLines;\n\t\tvar opcodes = params.opcodes;\n\t\tvar baseTextName = params.baseTextName ? params.baseTextName : \"Base Text\";\n\t\tvar newTextName = params.newTextName ? params.newTextName : \"New Text\";\n\t\tvar contextSize = params.contextSize;\n\t\tvar inline = (params.viewType == 0 || params.viewType == 1) ? params.viewType : 0;\n\n\t\tif (baseTextLines == null)\n\t\t\tthrow \"Cannot build diff view; baseTextLines is not defined.\";\n\t\tif (newTextLines == null)\n\t\t\tthrow \"Cannot build diff view; newTextLines is not defined.\";\n\t\tif (!opcodes)\n\t\t\tthrow \"Canno build diff view; opcodes is not defined.\";\n\n\t\tfunction celt (name, clazz) {\n\t\t\tvar e = document.createElement(name);\n\t\t\te.className = clazz;\n\t\t\treturn e;\n\t\t}\n\n\t\tfunction telt (name, text) {\n\t\t\tvar e = document.createElement(name);\n\t\t\te.appendChild(document.createTextNode(text));\n\t\t\treturn e;\n\t\t}\n\n\t\tfunction ctelt (name, clazz, text) {\n\t\t\tvar e = document.createElement(name);\n\t\t\te.className = clazz;\n\t\t\te.appendChild(document.createTextNode(text));\n\t\t\treturn e;\n\t\t}\n\n\t\tvar tdata = document.createElement(\"thead\");\n\t\tvar node = document.createElement(\"tr\");\n\t\ttdata.appendChild(node);\n\t\tif (inline) {\n\t\t\tnode.appendChild(document.createElement(\"th\"));\n\t\t\tnode.appendChild(document.createElement(\"th\"));\n\t\t\tnode.appendChild(ctelt(\"th\", \"texttitle\", baseTextName + \" vs. \" + newTextName));\n\t\t} else {\n\t\t\tnode.appendChild(document.createElement(\"th\"));\n\t\t\tnode.appendChild(ctelt(\"th\", \"texttitle\", baseTextName));\n\t\t\tnode.appendChild(document.createElement(\"th\"));\n\t\t\tnode.appendChild(ctelt(\"th\", \"texttitle\", newTextName));\n\t\t}\n\t\ttdata = [tdata];\n\n\t\tvar rows = [];\n\t\tvar node2;\n\n\t\t/**\n\t\t * Adds two cells to the given row; if the given row corresponds to a real\n\t\t * line number (based on the line index tidx and the endpoint of the\n\t\t * range in question tend), then the cells will contain the line number\n\t\t * and the line of text from textLines at position tidx (with the class of\n\t\t * the second cell set to the name of the change represented), and tidx + 1 will\n\t\t * be returned.\t Otherwise, tidx is returned, and two empty cells are added\n\t\t * to the given row.\n\t\t */\n\t\tfunction addCells (row, tidx, tend, textLines, change, i) {\n\t\t\tif (tidx < tend) {\n                if (change === 'equal' && i === 0) {\n                    row.appendChild(ctelt(\"th\", change + ' fold', '- ' + (tidx + 1).toString()));\n                    row.appendChild(ctelt(\"td\", change, textLines[tidx].replace(/\\t/g, \"\\u00a0\\u00a0\\u00a0\\u00a0\")));\n                } else {\n                    row.appendChild(ctelt(\"th\", change, (tidx + 1).toString()));\n                    row.appendChild(ctelt(\"td\", change, textLines[tidx].replace(/\\t/g, \"\\u00a0\\u00a0\\u00a0\\u00a0\")));\n                }\n\n\t\t\t\treturn tidx + 1;\n\t\t\t} else {\n\t\t\t\trow.appendChild(celt(\"th\", \"empty\"));\n\t\t\t\trow.appendChild(celt(\"td\", \"empty\"));\n\t\t\t\treturn tidx;\n\t\t\t}\n\t\t}\n\n\t\tfunction addCellsInline (row, tidx, tidx2, textLines, change) {\n\t\t\trow.appendChild(telt(\"th\", tidx == null ? \"\" : (tidx + 1).toString()));\n\t\t\trow.appendChild(telt(\"th\", tidx2 == null ? \"\" : (tidx2 + 1).toString()));\n\t\t\trow.appendChild(ctelt(\"td\", change, textLines[tidx != null ? tidx : tidx2].replace(/\\t/g, \"\\u00a0\\u00a0\\u00a0\\u00a0\")));\n\t\t}\n\n\t\tfor (var idx = 0; idx < opcodes.length; idx++) {\n\t\t\tcode = opcodes[idx];\n\t\t\tchange = code[0];\n\t\t\tvar b = code[1];\n\t\t\tvar be = code[2];\n\t\t\tvar n = code[3];\n\t\t\tvar ne = code[4];\n\t\t\tvar rowcnt = Math.max(be - b, ne - n);\n\t\t\tvar toprows = [];\n\t\t\tvar botrows = [];\n\t\t\tfor (var i = 0; i < rowcnt; i++) {\n\t\t\t\t// jump ahead if we've alredy provided leading context or if this is the first range\n\t\t\t\tif (contextSize && opcodes.length > 1 && ((idx > 0 && i == contextSize) || (idx == 0 && i == 0)) && change==\"equal\") {\n\t\t\t\t\tvar jump = rowcnt - ((idx == 0 ? 1 : 2) * contextSize);\n\t\t\t\t\tif (jump > 1) {\n\t\t\t\t\t\ttoprows.push(node = document.createElement(\"tr\"));\n\n\t\t\t\t\t\tb += jump;\n\t\t\t\t\t\tn += jump;\n\t\t\t\t\t\ti += jump - 1;\n\t\t\t\t\t\tnode.appendChild(telt(\"th\", \"...\"));\n\t\t\t\t\t\tif (!inline) node.appendChild(ctelt(\"td\", \"skip\", \"\"));\n\t\t\t\t\t\tnode.appendChild(telt(\"th\", \"...\"));\n\t\t\t\t\t\tnode.appendChild(ctelt(\"td\", \"skip\", \"\"));\n\n\t\t\t\t\t\t// skip last lines if they're all equal\n\t\t\t\t\t\tif (idx + 1 == opcodes.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttoprows.push(node = document.createElement(\"tr\"));\n\t\t\t\tif (inline) {\n\t\t\t\t\tif (change == \"insert\") {\n\t\t\t\t\t\taddCellsInline(node, null, n++, newTextLines, change);\n\t\t\t\t\t} else if (change == \"replace\") {\n\t\t\t\t\t\tbotrows.push(node2 = document.createElement(\"tr\"));\n\t\t\t\t\t\tif (b < be) addCellsInline(node, b++, null, baseTextLines, \"delete\");\n\t\t\t\t\t\tif (n < ne) addCellsInline(node2, null, n++, newTextLines, \"insert\");\n\t\t\t\t\t} else if (change == \"delete\") {\n\t\t\t\t\t\taddCellsInline(node, b++, null, baseTextLines, change);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// equal\n                        addCellsInline(node, b++, n++, baseTextLines, change);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tb = addCells(node, b, be, baseTextLines, change, i);\n\t\t\t\t\tn = addCells(node, n, ne, newTextLines, change);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < toprows.length; i++) rows.push(toprows[i]);\n\t\t\tfor (var i = 0; i < botrows.length; i++) rows.push(botrows[i]);\n\t\t}\n\n\t\trows.push(node = ctelt(\"th\", \"author\", \"diff view generated by \"));\n\t\tnode.setAttribute(\"colspan\", inline ? 3 : 4);\n\t\tnode.appendChild(node2 = telt(\"a\", \"jsdifflib\"));\n\t\tnode2.setAttribute(\"href\", \"http://github.com/cemerick/jsdifflib\");\n\n\t\ttdata.push(node = document.createElement(\"tbody\"));\n\t\tfor (var idx in rows) rows.hasOwnProperty(idx) && node.appendChild(rows[idx]);\n\n\t\tnode = celt(\"table\", \"diff\" + (inline ? \" inlinediff\" : \"\"));\n\t\tfor (var idx in tdata) tdata.hasOwnProperty(idx) && node.appendChild(tdata[idx]);\n\t\treturn node;\n\t}\n};\n\nmodule.exports = diffview;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kamFuZ29jbXNfbW9kZXJhdGlvbi9zdGF0aWMvZGphbmdvY21zX21vZGVyYXRpb24vanMvbGlicy9kaWZmdmlldy5qcz8zNzRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGlzIHBhcnQgb2YganNkaWZmbGliIHYxLjAuIDxodHRwOi8vZ2l0aHViLmNvbS9jZW1lcmljay9qc2RpZmZsaWI+XG5cbkNvcHlyaWdodCAyMDA3IC0gMjAxMSBDaGFzIEVtZXJpY2sgPGNlbWVyaWNrQHNub3d0aWRlLmNvbT4uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5cblJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dCBtb2RpZmljYXRpb24sIGFyZVxucGVybWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zIGFyZSBtZXQ6XG5cbiAgIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0IG9mXG4gICAgICBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIuXG5cbiAgIDIuIFJlZGlzdHJpYnV0aW9ucyBpbiBiaW5hcnkgZm9ybSBtdXN0IHJlcHJvZHVjZSB0aGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSwgdGhpcyBsaXN0XG4gICAgICBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFsc1xuICAgICAgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuXG5USElTIFNPRlRXQVJFIElTIFBST1ZJREVEIEJZIENoYXMgRW1lcmljayBgYEFTIElTJycgQU5EIEFOWSBFWFBSRVNTIE9SIElNUExJRURcbldBUlJBTlRJRVMsIElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBUSEUgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkRcbkZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFSRSBESVNDTEFJTUVELiBJTiBOTyBFVkVOVCBTSEFMTCBDaGFzIEVtZXJpY2sgT1JcbkNPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SIEFOWSBESVJFQ1QsIElORElSRUNULCBJTkNJREVOVEFMLCBTUEVDSUFMLCBFWEVNUExBUlksIE9SXG5DT05TRVFVRU5USUFMIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTIE9SXG5TRVJWSUNFUzsgTE9TUyBPRiBVU0UsIERBVEEsIE9SIFBST0ZJVFM7IE9SIEJVU0lORVNTIElOVEVSUlVQVElPTikgSE9XRVZFUiBDQVVTRUQgQU5EIE9OXG5BTlkgVEhFT1JZIE9GIExJQUJJTElUWSwgV0hFVEhFUiBJTiBDT05UUkFDVCwgU1RSSUNUIExJQUJJTElUWSwgT1IgVE9SVCAoSU5DTFVESU5HXG5ORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUgVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4gSUZcbkFEVklTRUQgT0YgVEhFIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuXG5UaGUgdmlld3MgYW5kIGNvbmNsdXNpb25zIGNvbnRhaW5lZCBpbiB0aGUgc29mdHdhcmUgYW5kIGRvY3VtZW50YXRpb24gYXJlIHRob3NlIG9mIHRoZVxuYXV0aG9ycyBhbmQgc2hvdWxkIG5vdCBiZSBpbnRlcnByZXRlZCBhcyByZXByZXNlbnRpbmcgb2ZmaWNpYWwgcG9saWNpZXMsIGVpdGhlciBleHByZXNzZWRcbm9yIGltcGxpZWQsIG9mIENoYXMgRW1lcmljay5cbiovXG52YXIgZGlmZnZpZXcgPSB7XG5cdC8qKlxuXHQgKiBCdWlsZHMgYW5kIHJldHVybnMgYSB2aXN1YWwgZGlmZiB2aWV3LiAgVGhlIHNpbmdsZSBwYXJhbWV0ZXIsIGBwYXJhbXMnLCBzaG91bGQgY29udGFpblxuXHQgKiB0aGUgZm9sbG93aW5nIHZhbHVlczpcblx0ICpcblx0ICogLSBiYXNlVGV4dExpbmVzOiB0aGUgYXJyYXkgb2Ygc3RyaW5ncyB0aGF0IHdhcyB1c2VkIGFzIHRoZSBiYXNlIHRleHQgaW5wdXQgdG8gU2VxdWVuY2VNYXRjaGVyXG5cdCAqIC0gbmV3VGV4dExpbmVzOiB0aGUgYXJyYXkgb2Ygc3RyaW5ncyB0aGF0IHdhcyB1c2VkIGFzIHRoZSBuZXcgdGV4dCBpbnB1dCB0byBTZXF1ZW5jZU1hdGNoZXJcblx0ICogLSBvcGNvZGVzOiB0aGUgYXJyYXkgb2YgYXJyYXlzIHJldHVybmVkIGJ5IFNlcXVlbmNlTWF0Y2hlci5nZXRfb3Bjb2RlcygpXG5cdCAqIC0gYmFzZVRleHROYW1lOiB0aGUgdGl0bGUgdG8gYmUgZGlzcGxheWVkIGFib3ZlIHRoZSBiYXNlIHRleHQgbGlzdGluZyBpbiB0aGUgZGlmZiB2aWV3OyBkZWZhdWx0c1xuXHQgKlx0ICAgdG8gXCJCYXNlIFRleHRcIlxuXHQgKiAtIG5ld1RleHROYW1lOiB0aGUgdGl0bGUgdG8gYmUgZGlzcGxheWVkIGFib3ZlIHRoZSBuZXcgdGV4dCBsaXN0aW5nIGluIHRoZSBkaWZmIHZpZXc7IGRlZmF1bHRzXG5cdCAqXHQgICB0byBcIk5ldyBUZXh0XCJcblx0ICogLSBjb250ZXh0U2l6ZTogdGhlIG51bWJlciBvZiBsaW5lcyBvZiBjb250ZXh0IHRvIHNob3cgYXJvdW5kIGRpZmZlcmVuY2VzOyBieSBkZWZhdWx0LCBhbGwgbGluZXNcblx0ICpcdCAgIGFyZSBzaG93blxuXHQgKiAtIHZpZXdUeXBlOiBpZiAwLCBhIHNpZGUtYnktc2lkZSBkaWZmIHZpZXcgaXMgZ2VuZXJhdGVkIChkZWZhdWx0KTsgaWYgMSwgYW4gaW5saW5lIGRpZmYgdmlldyBpc1xuXHQgKlx0ICAgZ2VuZXJhdGVkXG5cdCAqL1xuXHRidWlsZFZpZXc6IGZ1bmN0aW9uIChwYXJhbXMpIHtcblx0XHR2YXIgYmFzZVRleHRMaW5lcyA9IHBhcmFtcy5iYXNlVGV4dExpbmVzO1xuXHRcdHZhciBuZXdUZXh0TGluZXMgPSBwYXJhbXMubmV3VGV4dExpbmVzO1xuXHRcdHZhciBvcGNvZGVzID0gcGFyYW1zLm9wY29kZXM7XG5cdFx0dmFyIGJhc2VUZXh0TmFtZSA9IHBhcmFtcy5iYXNlVGV4dE5hbWUgPyBwYXJhbXMuYmFzZVRleHROYW1lIDogXCJCYXNlIFRleHRcIjtcblx0XHR2YXIgbmV3VGV4dE5hbWUgPSBwYXJhbXMubmV3VGV4dE5hbWUgPyBwYXJhbXMubmV3VGV4dE5hbWUgOiBcIk5ldyBUZXh0XCI7XG5cdFx0dmFyIGNvbnRleHRTaXplID0gcGFyYW1zLmNvbnRleHRTaXplO1xuXHRcdHZhciBpbmxpbmUgPSAocGFyYW1zLnZpZXdUeXBlID09IDAgfHwgcGFyYW1zLnZpZXdUeXBlID09IDEpID8gcGFyYW1zLnZpZXdUeXBlIDogMDtcblxuXHRcdGlmIChiYXNlVGV4dExpbmVzID09IG51bGwpXG5cdFx0XHR0aHJvdyBcIkNhbm5vdCBidWlsZCBkaWZmIHZpZXc7IGJhc2VUZXh0TGluZXMgaXMgbm90IGRlZmluZWQuXCI7XG5cdFx0aWYgKG5ld1RleHRMaW5lcyA9PSBudWxsKVxuXHRcdFx0dGhyb3cgXCJDYW5ub3QgYnVpbGQgZGlmZiB2aWV3OyBuZXdUZXh0TGluZXMgaXMgbm90IGRlZmluZWQuXCI7XG5cdFx0aWYgKCFvcGNvZGVzKVxuXHRcdFx0dGhyb3cgXCJDYW5ubyBidWlsZCBkaWZmIHZpZXc7IG9wY29kZXMgaXMgbm90IGRlZmluZWQuXCI7XG5cblx0XHRmdW5jdGlvbiBjZWx0IChuYW1lLCBjbGF6eikge1xuXHRcdFx0dmFyIGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KG5hbWUpO1xuXHRcdFx0ZS5jbGFzc05hbWUgPSBjbGF6ejtcblx0XHRcdHJldHVybiBlO1xuXHRcdH1cblxuXHRcdGZ1bmN0aW9uIHRlbHQgKG5hbWUsIHRleHQpIHtcblx0XHRcdHZhciBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChuYW1lKTtcblx0XHRcdGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGV4dCkpO1xuXHRcdFx0cmV0dXJuIGU7XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gY3RlbHQgKG5hbWUsIGNsYXp6LCB0ZXh0KSB7XG5cdFx0XHR2YXIgZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQobmFtZSk7XG5cdFx0XHRlLmNsYXNzTmFtZSA9IGNsYXp6O1xuXHRcdFx0ZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7XG5cdFx0XHRyZXR1cm4gZTtcblx0XHR9XG5cblx0XHR2YXIgdGRhdGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGhlYWRcIik7XG5cdFx0dmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidHJcIik7XG5cdFx0dGRhdGEuYXBwZW5kQ2hpbGQobm9kZSk7XG5cdFx0aWYgKGlubGluZSkge1xuXHRcdFx0bm9kZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGhcIikpO1xuXHRcdFx0bm9kZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidGhcIikpO1xuXHRcdFx0bm9kZS5hcHBlbmRDaGlsZChjdGVsdChcInRoXCIsIFwidGV4dHRpdGxlXCIsIGJhc2VUZXh0TmFtZSArIFwiIHZzLiBcIiArIG5ld1RleHROYW1lKSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdG5vZGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRoXCIpKTtcblx0XHRcdG5vZGUuYXBwZW5kQ2hpbGQoY3RlbHQoXCJ0aFwiLCBcInRleHR0aXRsZVwiLCBiYXNlVGV4dE5hbWUpKTtcblx0XHRcdG5vZGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRoXCIpKTtcblx0XHRcdG5vZGUuYXBwZW5kQ2hpbGQoY3RlbHQoXCJ0aFwiLCBcInRleHR0aXRsZVwiLCBuZXdUZXh0TmFtZSkpO1xuXHRcdH1cblx0XHR0ZGF0YSA9IFt0ZGF0YV07XG5cblx0XHR2YXIgcm93cyA9IFtdO1xuXHRcdHZhciBub2RlMjtcblxuXHRcdC8qKlxuXHRcdCAqIEFkZHMgdHdvIGNlbGxzIHRvIHRoZSBnaXZlbiByb3c7IGlmIHRoZSBnaXZlbiByb3cgY29ycmVzcG9uZHMgdG8gYSByZWFsXG5cdFx0ICogbGluZSBudW1iZXIgKGJhc2VkIG9uIHRoZSBsaW5lIGluZGV4IHRpZHggYW5kIHRoZSBlbmRwb2ludCBvZiB0aGVcblx0XHQgKiByYW5nZSBpbiBxdWVzdGlvbiB0ZW5kKSwgdGhlbiB0aGUgY2VsbHMgd2lsbCBjb250YWluIHRoZSBsaW5lIG51bWJlclxuXHRcdCAqIGFuZCB0aGUgbGluZSBvZiB0ZXh0IGZyb20gdGV4dExpbmVzIGF0IHBvc2l0aW9uIHRpZHggKHdpdGggdGhlIGNsYXNzIG9mXG5cdFx0ICogdGhlIHNlY29uZCBjZWxsIHNldCB0byB0aGUgbmFtZSBvZiB0aGUgY2hhbmdlIHJlcHJlc2VudGVkKSwgYW5kIHRpZHggKyAxIHdpbGxcblx0XHQgKiBiZSByZXR1cm5lZC5cdCBPdGhlcndpc2UsIHRpZHggaXMgcmV0dXJuZWQsIGFuZCB0d28gZW1wdHkgY2VsbHMgYXJlIGFkZGVkXG5cdFx0ICogdG8gdGhlIGdpdmVuIHJvdy5cblx0XHQgKi9cblx0XHRmdW5jdGlvbiBhZGRDZWxscyAocm93LCB0aWR4LCB0ZW5kLCB0ZXh0TGluZXMsIGNoYW5nZSwgaSkge1xuXHRcdFx0aWYgKHRpZHggPCB0ZW5kKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoYW5nZSA9PT0gJ2VxdWFsJyAmJiBpID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjdGVsdChcInRoXCIsIGNoYW5nZSArICcgZm9sZCcsICctICcgKyAodGlkeCArIDEpLnRvU3RyaW5nKCkpKTtcbiAgICAgICAgICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGN0ZWx0KFwidGRcIiwgY2hhbmdlLCB0ZXh0TGluZXNbdGlkeF0ucmVwbGFjZSgvXFx0L2csIFwiXFx1MDBhMFxcdTAwYTBcXHUwMGEwXFx1MDBhMFwiKSkpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjdGVsdChcInRoXCIsIGNoYW5nZSwgKHRpZHggKyAxKS50b1N0cmluZygpKSk7XG4gICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjdGVsdChcInRkXCIsIGNoYW5nZSwgdGV4dExpbmVzW3RpZHhdLnJlcGxhY2UoL1xcdC9nLCBcIlxcdTAwYTBcXHUwMGEwXFx1MDBhMFxcdTAwYTBcIikpKTtcbiAgICAgICAgICAgICAgICB9XG5cblx0XHRcdFx0cmV0dXJuIHRpZHggKyAxO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cm93LmFwcGVuZENoaWxkKGNlbHQoXCJ0aFwiLCBcImVtcHR5XCIpKTtcblx0XHRcdFx0cm93LmFwcGVuZENoaWxkKGNlbHQoXCJ0ZFwiLCBcImVtcHR5XCIpKTtcblx0XHRcdFx0cmV0dXJuIHRpZHg7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0ZnVuY3Rpb24gYWRkQ2VsbHNJbmxpbmUgKHJvdywgdGlkeCwgdGlkeDIsIHRleHRMaW5lcywgY2hhbmdlKSB7XG5cdFx0XHRyb3cuYXBwZW5kQ2hpbGQodGVsdChcInRoXCIsIHRpZHggPT0gbnVsbCA/IFwiXCIgOiAodGlkeCArIDEpLnRvU3RyaW5nKCkpKTtcblx0XHRcdHJvdy5hcHBlbmRDaGlsZCh0ZWx0KFwidGhcIiwgdGlkeDIgPT0gbnVsbCA/IFwiXCIgOiAodGlkeDIgKyAxKS50b1N0cmluZygpKSk7XG5cdFx0XHRyb3cuYXBwZW5kQ2hpbGQoY3RlbHQoXCJ0ZFwiLCBjaGFuZ2UsIHRleHRMaW5lc1t0aWR4ICE9IG51bGwgPyB0aWR4IDogdGlkeDJdLnJlcGxhY2UoL1xcdC9nLCBcIlxcdTAwYTBcXHUwMGEwXFx1MDBhMFxcdTAwYTBcIikpKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpZHggPSAwOyBpZHggPCBvcGNvZGVzLmxlbmd0aDsgaWR4KyspIHtcblx0XHRcdGNvZGUgPSBvcGNvZGVzW2lkeF07XG5cdFx0XHRjaGFuZ2UgPSBjb2RlWzBdO1xuXHRcdFx0dmFyIGIgPSBjb2RlWzFdO1xuXHRcdFx0dmFyIGJlID0gY29kZVsyXTtcblx0XHRcdHZhciBuID0gY29kZVszXTtcblx0XHRcdHZhciBuZSA9IGNvZGVbNF07XG5cdFx0XHR2YXIgcm93Y250ID0gTWF0aC5tYXgoYmUgLSBiLCBuZSAtIG4pO1xuXHRcdFx0dmFyIHRvcHJvd3MgPSBbXTtcblx0XHRcdHZhciBib3Ryb3dzID0gW107XG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHJvd2NudDsgaSsrKSB7XG5cdFx0XHRcdC8vIGp1bXAgYWhlYWQgaWYgd2UndmUgYWxyZWR5IHByb3ZpZGVkIGxlYWRpbmcgY29udGV4dCBvciBpZiB0aGlzIGlzIHRoZSBmaXJzdCByYW5nZVxuXHRcdFx0XHRpZiAoY29udGV4dFNpemUgJiYgb3Bjb2Rlcy5sZW5ndGggPiAxICYmICgoaWR4ID4gMCAmJiBpID09IGNvbnRleHRTaXplKSB8fCAoaWR4ID09IDAgJiYgaSA9PSAwKSkgJiYgY2hhbmdlPT1cImVxdWFsXCIpIHtcblx0XHRcdFx0XHR2YXIganVtcCA9IHJvd2NudCAtICgoaWR4ID09IDAgPyAxIDogMikgKiBjb250ZXh0U2l6ZSk7XG5cdFx0XHRcdFx0aWYgKGp1bXAgPiAxKSB7XG5cdFx0XHRcdFx0XHR0b3Byb3dzLnB1c2gobm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKSk7XG5cblx0XHRcdFx0XHRcdGIgKz0ganVtcDtcblx0XHRcdFx0XHRcdG4gKz0ganVtcDtcblx0XHRcdFx0XHRcdGkgKz0ganVtcCAtIDE7XG5cdFx0XHRcdFx0XHRub2RlLmFwcGVuZENoaWxkKHRlbHQoXCJ0aFwiLCBcIi4uLlwiKSk7XG5cdFx0XHRcdFx0XHRpZiAoIWlubGluZSkgbm9kZS5hcHBlbmRDaGlsZChjdGVsdChcInRkXCIsIFwic2tpcFwiLCBcIlwiKSk7XG5cdFx0XHRcdFx0XHRub2RlLmFwcGVuZENoaWxkKHRlbHQoXCJ0aFwiLCBcIi4uLlwiKSk7XG5cdFx0XHRcdFx0XHRub2RlLmFwcGVuZENoaWxkKGN0ZWx0KFwidGRcIiwgXCJza2lwXCIsIFwiXCIpKTtcblxuXHRcdFx0XHRcdFx0Ly8gc2tpcCBsYXN0IGxpbmVzIGlmIHRoZXkncmUgYWxsIGVxdWFsXG5cdFx0XHRcdFx0XHRpZiAoaWR4ICsgMSA9PSBvcGNvZGVzLmxlbmd0aCkge1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRvcHJvd3MucHVzaChub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRyXCIpKTtcblx0XHRcdFx0aWYgKGlubGluZSkge1xuXHRcdFx0XHRcdGlmIChjaGFuZ2UgPT0gXCJpbnNlcnRcIikge1xuXHRcdFx0XHRcdFx0YWRkQ2VsbHNJbmxpbmUobm9kZSwgbnVsbCwgbisrLCBuZXdUZXh0TGluZXMsIGNoYW5nZSk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChjaGFuZ2UgPT0gXCJyZXBsYWNlXCIpIHtcblx0XHRcdFx0XHRcdGJvdHJvd3MucHVzaChub2RlMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0clwiKSk7XG5cdFx0XHRcdFx0XHRpZiAoYiA8IGJlKSBhZGRDZWxsc0lubGluZShub2RlLCBiKyssIG51bGwsIGJhc2VUZXh0TGluZXMsIFwiZGVsZXRlXCIpO1xuXHRcdFx0XHRcdFx0aWYgKG4gPCBuZSkgYWRkQ2VsbHNJbmxpbmUobm9kZTIsIG51bGwsIG4rKywgbmV3VGV4dExpbmVzLCBcImluc2VydFwiKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKGNoYW5nZSA9PSBcImRlbGV0ZVwiKSB7XG5cdFx0XHRcdFx0XHRhZGRDZWxsc0lubGluZShub2RlLCBiKyssIG51bGwsIGJhc2VUZXh0TGluZXMsIGNoYW5nZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdC8vIGVxdWFsXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRDZWxsc0lubGluZShub2RlLCBiKyssIG4rKywgYmFzZVRleHRMaW5lcywgY2hhbmdlKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0YiA9IGFkZENlbGxzKG5vZGUsIGIsIGJlLCBiYXNlVGV4dExpbmVzLCBjaGFuZ2UsIGkpO1xuXHRcdFx0XHRcdG4gPSBhZGRDZWxscyhub2RlLCBuLCBuZSwgbmV3VGV4dExpbmVzLCBjaGFuZ2UpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdG9wcm93cy5sZW5ndGg7IGkrKykgcm93cy5wdXNoKHRvcHJvd3NbaV0pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBib3Ryb3dzLmxlbmd0aDsgaSsrKSByb3dzLnB1c2goYm90cm93c1tpXSk7XG5cdFx0fVxuXG5cdFx0cm93cy5wdXNoKG5vZGUgPSBjdGVsdChcInRoXCIsIFwiYXV0aG9yXCIsIFwiZGlmZiB2aWV3IGdlbmVyYXRlZCBieSBcIikpO1xuXHRcdG5vZGUuc2V0QXR0cmlidXRlKFwiY29sc3BhblwiLCBpbmxpbmUgPyAzIDogNCk7XG5cdFx0bm9kZS5hcHBlbmRDaGlsZChub2RlMiA9IHRlbHQoXCJhXCIsIFwianNkaWZmbGliXCIpKTtcblx0XHRub2RlMi5zZXRBdHRyaWJ1dGUoXCJocmVmXCIsIFwiaHR0cDovL2dpdGh1Yi5jb20vY2VtZXJpY2svanNkaWZmbGliXCIpO1xuXG5cdFx0dGRhdGEucHVzaChub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRib2R5XCIpKTtcblx0XHRmb3IgKHZhciBpZHggaW4gcm93cykgcm93cy5oYXNPd25Qcm9wZXJ0eShpZHgpICYmIG5vZGUuYXBwZW5kQ2hpbGQocm93c1tpZHhdKTtcblxuXHRcdG5vZGUgPSBjZWx0KFwidGFibGVcIiwgXCJkaWZmXCIgKyAoaW5saW5lID8gXCIgaW5saW5lZGlmZlwiIDogXCJcIikpO1xuXHRcdGZvciAodmFyIGlkeCBpbiB0ZGF0YSkgdGRhdGEuaGFzT3duUHJvcGVydHkoaWR4KSAmJiBub2RlLmFwcGVuZENoaWxkKHRkYXRhW2lkeF0pO1xuXHRcdHJldHVybiBub2RlO1xuXHR9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGRpZmZ2aWV3O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9kamFuZ29jbXNfbW9kZXJhdGlvbi9zdGF0aWMvZGphbmdvY21zX21vZGVyYXRpb24vanMvbGlicy9kaWZmdmlldy5qc1xuLy8gbW9kdWxlIGlkID0gODZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///86\n");

/***/ }),

/***/ 87:
/***/ (function(module, exports) {

eval("module.exports = \"(function dom__init() {\\n    'use strict';\\n\\n    var MIN_ROWS_TO_HIDE = 5;\\n    var nextUntil = function nextUntil(element, predicate) {\\n        var next = [];\\n        var el = element;\\n\\n        while (el.nextSibling && !predicate(el.nextSibling)) {\\n            el = el.nextSibling;\\n            next.push(el);\\n        }\\n\\n        return next;\\n    };\\n\\n    // namespace to test for web browser features for progressive enhancement\\n    // namespace for event handlers\\n    var event = {\\n        // allows visual folding of consecutive equal lines in a diff report\\n        difffold: function dom__event_difffold() {\\n            var row = this.parentNode;\\n            var rows;\\n\\n            if (row.classList.contains('folded')) {\\n                row.classList.remove('folded');\\n                this.textContent = this.textContent.replace('+', '-');\\n\\n                rows = nextUntil(row, function(r) {\\n                    if (r.style.display === 'none') {\\n                        return false;\\n                    }\\n                    return true;\\n                });\\n\\n                rows.forEach(function(r) {\\n                    r.style.display = 'table-row';\\n                });\\n            } else {\\n                row.classList.add('folded');\\n                this.textContent = this.textContent.replace('-', '+');\\n\\n                rows = nextUntil(row, function(r) {\\n                    var ths = r.getElementsByTagName('th');\\n\\n                    if (ths && ths.length) {\\n                        var cls = ths[0].className;\\n\\n                        if (cls && !cls.match('equal')) {\\n                            return true;\\n                        }\\n                    }\\n\\n                    return false;\\n                });\\n\\n                rows.forEach(function(r) {\\n                    r.style.display = 'none';\\n                });\\n            }\\n        }\\n    };\\n\\n    // alter tool on page load in reflection to saved state\\n    var load = function () {\\n        var difflist = document.getElementsByTagName('table');\\n\\n        if (!difflist.length) {\\n            return;\\n        }\\n        var cells = difflist[0].getElementsByTagName('th');\\n        var len = cells.length;\\n        var a = 0;\\n\\n        for (a = 0; a < len; a += 1) {\\n            if (cells[a].getAttribute('class') && cells[a].getAttribute('class').match(/fold/)) {\\n                cells[a].onclick = event.difffold;\\n                if (cells[a].getAttribute('class').match(/equal/)) {\\n                    var rows = nextUntil(cells[a].parentNode, function(r) {\\n                        var ths = r.getElementsByTagName('th');\\n\\n                        if (ths && ths.length) {\\n                            var cls = ths[0].className;\\n\\n                            if (cls && !cls.match('equal')) {\\n                                return true;\\n                            }\\n                        }\\n\\n                        return false;\\n                    });\\n\\n                    if (rows.length > MIN_ROWS_TO_HIDE) {\\n                        cells[a].onclick();\\n                    } else {\\n                        cells[a].classList.remove('fold');\\n                        cells[a].textContent = cells[a].textContent.replace('- ', '');\\n                    }\\n                }\\n            }\\n        }\\n    };\\n\\n    window.onload = load;\\n})();\\n\"//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9kamFuZ29jbXNfbW9kZXJhdGlvbi9zdGF0aWMvZGphbmdvY21zX21vZGVyYXRpb24vanMvbGlicy9hcGkvZG9tLmpzP2YwMDEiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBcIihmdW5jdGlvbiBkb21fX2luaXQoKSB7XFxuICAgICd1c2Ugc3RyaWN0JztcXG5cXG4gICAgdmFyIE1JTl9ST1dTX1RPX0hJREUgPSA1O1xcbiAgICB2YXIgbmV4dFVudGlsID0gZnVuY3Rpb24gbmV4dFVudGlsKGVsZW1lbnQsIHByZWRpY2F0ZSkge1xcbiAgICAgICAgdmFyIG5leHQgPSBbXTtcXG4gICAgICAgIHZhciBlbCA9IGVsZW1lbnQ7XFxuXFxuICAgICAgICB3aGlsZSAoZWwubmV4dFNpYmxpbmcgJiYgIXByZWRpY2F0ZShlbC5uZXh0U2libGluZykpIHtcXG4gICAgICAgICAgICBlbCA9IGVsLm5leHRTaWJsaW5nO1xcbiAgICAgICAgICAgIG5leHQucHVzaChlbCk7XFxuICAgICAgICB9XFxuXFxuICAgICAgICByZXR1cm4gbmV4dDtcXG4gICAgfTtcXG5cXG4gICAgLy8gbmFtZXNwYWNlIHRvIHRlc3QgZm9yIHdlYiBicm93c2VyIGZlYXR1cmVzIGZvciBwcm9ncmVzc2l2ZSBlbmhhbmNlbWVudFxcbiAgICAvLyBuYW1lc3BhY2UgZm9yIGV2ZW50IGhhbmRsZXJzXFxuICAgIHZhciBldmVudCA9IHtcXG4gICAgICAgIC8vIGFsbG93cyB2aXN1YWwgZm9sZGluZyBvZiBjb25zZWN1dGl2ZSBlcXVhbCBsaW5lcyBpbiBhIGRpZmYgcmVwb3J0XFxuICAgICAgICBkaWZmZm9sZDogZnVuY3Rpb24gZG9tX19ldmVudF9kaWZmZm9sZCgpIHtcXG4gICAgICAgICAgICB2YXIgcm93ID0gdGhpcy5wYXJlbnROb2RlO1xcbiAgICAgICAgICAgIHZhciByb3dzO1xcblxcbiAgICAgICAgICAgIGlmIChyb3cuY2xhc3NMaXN0LmNvbnRhaW5zKCdmb2xkZWQnKSkge1xcbiAgICAgICAgICAgICAgICByb3cuY2xhc3NMaXN0LnJlbW92ZSgnZm9sZGVkJyk7XFxuICAgICAgICAgICAgICAgIHRoaXMudGV4dENvbnRlbnQgPSB0aGlzLnRleHRDb250ZW50LnJlcGxhY2UoJysnLCAnLScpO1xcblxcbiAgICAgICAgICAgICAgICByb3dzID0gbmV4dFVudGlsKHJvdywgZnVuY3Rpb24ocikge1xcbiAgICAgICAgICAgICAgICAgICAgaWYgKHIuc3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcbiAgICAgICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICAgICAgICAgIH0pO1xcblxcbiAgICAgICAgICAgICAgICByb3dzLmZvckVhY2goZnVuY3Rpb24ocikge1xcbiAgICAgICAgICAgICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlLXJvdyc7XFxuICAgICAgICAgICAgICAgIH0pO1xcbiAgICAgICAgICAgIH0gZWxzZSB7XFxuICAgICAgICAgICAgICAgIHJvdy5jbGFzc0xpc3QuYWRkKCdmb2xkZWQnKTtcXG4gICAgICAgICAgICAgICAgdGhpcy50ZXh0Q29udGVudCA9IHRoaXMudGV4dENvbnRlbnQucmVwbGFjZSgnLScsICcrJyk7XFxuXFxuICAgICAgICAgICAgICAgIHJvd3MgPSBuZXh0VW50aWwocm93LCBmdW5jdGlvbihyKSB7XFxuICAgICAgICAgICAgICAgICAgICB2YXIgdGhzID0gci5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGgnKTtcXG5cXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aHMgJiYgdGhzLmxlbmd0aCkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjbHMgPSB0aHNbMF0uY2xhc3NOYW1lO1xcblxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbHMgJiYgIWNscy5tYXRjaCgnZXF1YWwnKSkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XFxuICAgICAgICAgICAgICAgIH0pO1xcblxcbiAgICAgICAgICAgICAgICByb3dzLmZvckVhY2goZnVuY3Rpb24ocikge1xcbiAgICAgICAgICAgICAgICAgICAgci5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xcbiAgICAgICAgICAgICAgICB9KTtcXG4gICAgICAgICAgICB9XFxuICAgICAgICB9XFxuICAgIH07XFxuXFxuICAgIC8vIGFsdGVyIHRvb2wgb24gcGFnZSBsb2FkIGluIHJlZmxlY3Rpb24gdG8gc2F2ZWQgc3RhdGVcXG4gICAgdmFyIGxvYWQgPSBmdW5jdGlvbiAoKSB7XFxuICAgICAgICB2YXIgZGlmZmxpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGFibGUnKTtcXG5cXG4gICAgICAgIGlmICghZGlmZmxpc3QubGVuZ3RoKSB7XFxuICAgICAgICAgICAgcmV0dXJuO1xcbiAgICAgICAgfVxcbiAgICAgICAgdmFyIGNlbGxzID0gZGlmZmxpc3RbMF0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RoJyk7XFxuICAgICAgICB2YXIgbGVuID0gY2VsbHMubGVuZ3RoO1xcbiAgICAgICAgdmFyIGEgPSAwO1xcblxcbiAgICAgICAgZm9yIChhID0gMDsgYSA8IGxlbjsgYSArPSAxKSB7XFxuICAgICAgICAgICAgaWYgKGNlbGxzW2FdLmdldEF0dHJpYnV0ZSgnY2xhc3MnKSAmJiBjZWxsc1thXS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykubWF0Y2goL2ZvbGQvKSkge1xcbiAgICAgICAgICAgICAgICBjZWxsc1thXS5vbmNsaWNrID0gZXZlbnQuZGlmZmZvbGQ7XFxuICAgICAgICAgICAgICAgIGlmIChjZWxsc1thXS5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykubWF0Y2goL2VxdWFsLykpIHtcXG4gICAgICAgICAgICAgICAgICAgIHZhciByb3dzID0gbmV4dFVudGlsKGNlbGxzW2FdLnBhcmVudE5vZGUsIGZ1bmN0aW9uKHIpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdGhzID0gci5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGgnKTtcXG5cXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhzICYmIHRocy5sZW5ndGgpIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNscyA9IHRoc1swXS5jbGFzc05hbWU7XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjbHMgJiYgIWNscy5tYXRjaCgnZXF1YWwnKSkge1xcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgICAgICAgICB9XFxuXFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xcbiAgICAgICAgICAgICAgICAgICAgfSk7XFxuXFxuICAgICAgICAgICAgICAgICAgICBpZiAocm93cy5sZW5ndGggPiBNSU5fUk9XU19UT19ISURFKSB7XFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHNbYV0ub25jbGljaygpO1xcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBjZWxsc1thXS5jbGFzc0xpc3QucmVtb3ZlKCdmb2xkJyk7XFxuICAgICAgICAgICAgICAgICAgICAgICAgY2VsbHNbYV0udGV4dENvbnRlbnQgPSBjZWxsc1thXS50ZXh0Q29udGVudC5yZXBsYWNlKCctICcsICcnKTtcXG4gICAgICAgICAgICAgICAgICAgIH1cXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgfTtcXG5cXG4gICAgd2luZG93Lm9ubG9hZCA9IGxvYWQ7XFxufSkoKTtcXG5cIlxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZGphbmdvY21zX21vZGVyYXRpb24vc3RhdGljL2RqYW5nb2Ntc19tb2RlcmF0aW9uL2pzL2xpYnMvYXBpL2RvbS5qc1xuLy8gbW9kdWxlIGlkID0gODdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///87\n");

/***/ })

});