moderationWebpackJsonp([0],{85:function(e,t,n){"use strict";function r(e,t){var n=c.a.stringAsLines(e),r=c.a.stringAsLines(t),i=new c.a.SequenceMatcher(n,r),a=i.get_opcodes();return p({baseTextLines:n,newTextLines:r,opcodes:a,baseTextName:"Published",newTextName:"Current",contextSize:null,viewType:0}).outerHTML}Object.defineProperty(t,"__esModule",{value:!0});var i=n(87),a=n.n(i),l=n(88),s=n.n(l),o=n(86),c=n.n(o),d=n(90),h=n.n(d),u=n(38),f=n.n(u),p=f()(s.a.buildView);t.default={diff:r,styles:a.a,js:h.a}},86:function(e,t){var n={" ":!0,"\t":!0,"\n":!0,"\f":!0,"\r":!0},r={defaultJunkFunction:function(e){return n.hasOwnProperty(e)},stripLinebreaks:function(e){return e.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(e){for(var t=e.indexOf("\n"),n=e.indexOf("\r"),i=t>-1&&n>-1||n<0?"\n":"\r",a=e.split(i),l=0;l<a.length;l++)a[l]=r.stripLinebreaks(a[l]);return a},__reduce:function(e,t,n){if(null!=n)var r=n,i=0;else{if(!t)return null;var r=t[0],i=1}for(;i<t.length;i++)r=e(r,t[i]);return r},__ntuplecomp:function(e,t){for(var n=Math.max(e.length,t.length),r=0;r<n;r++){if(e[r]<t[r])return-1;if(e[r]>t[r])return 1}return e.length==t.length?0:e.length<t.length?-1:1},__calculate_ratio:function(e,t){return t?2*e/t:1},__isindict:function(e){return function(t){return e.hasOwnProperty(t)}},__dictget:function(e,t,n){return e.hasOwnProperty(t)?e[t]:n},SequenceMatcher:function(e,t,n){this.set_seqs=function(e,t){this.set_seq1(e),this.set_seq2(t)},this.set_seq1=function(e){e!=this.a&&(this.a=e,this.matching_blocks=this.opcodes=null)},this.set_seq2=function(e){e!=this.b&&(this.b=e,this.matching_blocks=this.opcodes=this.fullbcount=null,this.__chain_b())},this.__chain_b=function(){for(var e=this.b,t=e.length,n=this.b2j={},i={},a=0;a<e.length;a++){var l=e[a];if(n.hasOwnProperty(l)){var s=n[l];t>=200&&100*s.length>t?(i[l]=1,delete n[l]):s.push(a)}else n[l]=[a]}for(var l in i)i.hasOwnProperty(l)&&delete n[l];var o=this.isjunk,c={};if(o){for(var l in i)i.hasOwnProperty(l)&&o(l)&&(c[l]=1,delete i[l]);for(var l in n)n.hasOwnProperty(l)&&o(l)&&(c[l]=1,delete n[l])}this.isbjunk=r.__isindict(c),this.isbpopular=r.__isindict(i)},this.find_longest_match=function(e,t,n,i){for(var a,l=this.a,s=this.b,o=this.b2j,c=this.isbjunk,d=e,h=n,u=0,f=null,p={},g=[],m=e;m<t;m++){var b={},v=r.__dictget(o,l[m],g);for(var _ in v)if(v.hasOwnProperty(_)){if((f=v[_])<n)continue;if(f>=i)break;b[f]=a=r.__dictget(p,f-1,0)+1,a>u&&(d=m-a+1,h=f-a+1,u=a)}p=b}for(;d>e&&h>n&&!c(s[h-1])&&l[d-1]==s[h-1];)d--,h--,u++;for(;d+u<t&&h+u<i&&!c(s[h+u])&&l[d+u]==s[h+u];)u++;for(;d>e&&h>n&&c(s[h-1])&&l[d-1]==s[h-1];)d--,h--,u++;for(;d+u<t&&h+u<i&&c(s[h+u])&&l[d+u]==s[h+u];)u++;return[d,h,u]},this.get_matching_blocks=function(){if(null!=this.matching_blocks)return this.matching_blocks;for(var e,t,n,i,a,l,s,o,c,d=this.a.length,h=this.b.length,u=[[0,d,0,h]],f=[];u.length;)a=u.pop(),e=a[0],t=a[1],n=a[2],i=a[3],c=this.find_longest_match(e,t,n,i),l=c[0],s=c[1],(o=c[2])&&(f.push(c),e<l&&n<s&&u.push([e,l,n,s]),l+o<t&&s+o<i&&u.push([l+o,t,s+o,i]));f.sort(r.__ntuplecomp);var p,g,m,b=0,v=0,_=0,x=0,w=[];for(var k in f)f.hasOwnProperty(k)&&(x=f[k],p=x[0],g=x[1],m=x[2],b+_==p&&v+_==g?_+=m:(_&&w.push([b,v,_]),b=p,v=g,_=m));return _&&w.push([b,v,_]),w.push([d,h,0]),this.matching_blocks=w,this.matching_blocks},this.get_opcodes=function(){if(null!=this.opcodes)return this.opcodes;var e=0,t=0,n=[];this.opcodes=n;var r,i,a,l,s,o=this.get_matching_blocks();for(var c in o)o.hasOwnProperty(c)&&(r=o[c],i=r[0],a=r[1],l=r[2],s="",e<i&&t<a?s="replace":e<i?s="delete":t<a&&(s="insert"),s&&n.push([s,e,i,t,a]),e=i+l,t=a+l,l&&n.push(["equal",i,e,a,t]));return n},this.get_grouped_opcodes=function(e){e||(e=3);var t=this.get_opcodes();t||(t=[["equal",0,1,0,1]]);var n,r,i,a,l,s;"equal"==t[0][0]&&(n=t[0],r=n[0],i=n[1],a=n[2],l=n[3],s=n[4],t[0]=[r,Math.max(i,a-e),a,Math.max(l,s-e),s]),"equal"==t[t.length-1][0]&&(n=t[t.length-1],r=n[0],i=n[1],a=n[2],l=n[3],s=n[4],t[t.length-1]=[r,i,Math.min(a,i+e),l,Math.min(s,l+e)]);var o=e+e,c=[],d=[];for(var h in t)t.hasOwnProperty(h)&&(n=t[h],r=n[0],i=n[1],a=n[2],l=n[3],s=n[4],"equal"==r&&a-i>o&&(c.push([r,i,Math.min(a,i+e),l,Math.min(s,l+e)]),d.push(c),c=[],i=Math.max(i,a-e),l=Math.max(l,s-e)),c.push([r,i,a,l,s]));return!c||1==c.length&&"equal"==c[0][0]||d.push(c),d},this.ratio=function(){return matches=r.__reduce(function(e,t){return e+t[t.length-1]},this.get_matching_blocks(),0),r.__calculate_ratio(matches,this.a.length+this.b.length)},this.quick_ratio=function(){var e,t;if(null==this.fullbcount){this.fullbcount=e={};for(var n=0;n<this.b.length;n++)t=this.b[n],e[t]=r.__dictget(e,t,0)+1}e=this.fullbcount;for(var i={},a=r.__isindict(i),l=numb=0,n=0;n<this.a.length;n++)t=this.a[n],a(t)?numb=i[t]:numb=r.__dictget(e,t,0),i[t]=numb-1,numb>0&&l++;return r.__calculate_ratio(l,this.a.length+this.b.length)},this.real_quick_ratio=function(){var e=this.a.length,t=this.b.length;return _calculate_ratio(Math.min(e,t),e+t)},this.isjunk=n||r.defaultJunkFunction,this.a=this.b=null,this.set_seqs(e,t)}};e.exports=r},87:function(e,t){e.exports="*{@media (max-width:440px){.cms-moderation-controls{left:0}.cms-moderation-controls .cms-toolbar-item-buttons{margin-left:15px!important}}box-sizing:border-box}body{padding:0;margin:0}.texttitle{text-align:left;padding-top:20px;padding-bottom:10px}table{width:100%;min-width:480px;font-size:12px;line-height:20px;color:#032f62;border-collapse:collapse;border:0;font-family:SFMono-Regular,Consolas,Liberation Mono,Menlo,Courier,monospace}th{min-width:60px;white-space:nowrap}td,th{vertical-align:top;padding:0 10px}th:not(.texttitle){text-align:right;color:rgba(27,31,35,.3);font-weight:400}td+th{border-left:1px solid #f6f8fa}td{word-break:break-all;white-space:pre-wrap;width:50%}td.delete,td.replace{background:#ffeef0}td.insert,td.replace~td.replace{background:#e6ffed}th.delete,th.replace{background-color:#ffdce0}del.diff{text-decoration:none;background-color:#fdb8c0;border-radius:2px}th.insert,th.replace~th.replace{background-color:#cdffd8}ins.diff{text-decoration:none;background-color:#acf2bd;border-radius:2px}.empty{background:#fafbfc}.fold{cursor:pointer}.folded td,.folded th{background-color:#f7f7f7}.folded td{color:rgba(0,0,0,.3)}.folded th.fold{background-color:#ededed}"},88:function(e,t,n){var r=n(86),i=n(89),a={buildView:function(e){function t(e,t){var n=document.createElement(e);return n.className=t,n}function n(e,t){var n=document.createElement(e);return n.appendChild(document.createTextNode(t)),n}function a(e,t,n){var r=document.createElement(e);return r.className=t,r.appendChild(document.createTextNode(n)),r}function l(e,t,n){var r=document.createElement(e);return r.className=t,r.innerHTML+=n,r}function s(e,n,r,i,l,s){return n<r?("equal"===l&&0===s?(e.appendChild(a("th",l+" fold","- "+(n+1).toString())),e.appendChild(a("td",l,i[n].replace(/\t/g,"    ")))):(e.appendChild(a("th",l,(n+1).toString())),e.appendChild(a("td",l,i[n].replace(/\t/g,"    ")))),n+1):(e.appendChild(t("th","empty")),e.appendChild(t("td","empty")),n)}function o(e,n,r,i,a){return n<r?(e.appendChild(l("th",a,(n+1).toString())),e.appendChild(l("td",a,i.replace(/\t/g,"    "))),n+1):(e.appendChild(t("th","empty")),e.appendChild(t("td","empty")),n)}function c(e,t,r,i,l){e.appendChild(n("th",null==t?"":(t+1).toString())),e.appendChild(n("th",null==r?"":(r+1).toString())),e.appendChild(a("td",l,i[null!=t?t:r].replace(/\t/g,"    ")))}var d=e.baseTextLines,h=e.newTextLines,u=e.opcodes,f=e.baseTextName?e.baseTextName:"Base Text",p=e.newTextName?e.newTextName:"New Text",g=e.contextSize,m=0==e.viewType||1==e.viewType?e.viewType:0;if(null==d)throw new Error("Cannot build diff view; baseTextLines is not defined.");if(null==h)throw new Error("Cannot build diff view; newTextLines is not defined.");if(!u)throw new Error("Cannot build diff view; opcodes is not defined.");var b=document.createElement("thead"),v=document.createElement("tr");b.appendChild(v),m?(v.appendChild(document.createElement("th")),v.appendChild(document.createElement("th")),v.appendChild(a("th","texttitle",f+" vs. "+p))):(v.appendChild(document.createElement("th")),v.appendChild(a("th","texttitle",f)),v.appendChild(document.createElement("th")),v.appendChild(a("th","texttitle",p))),b=[b];for(var _,x=[],w=0;w<u.length;w++){for(var k=u[w],C=k[0],y=k[1],T=k[2],E=k[3],q=k[4],M=Math.max(T-y,q-E),N=[],O=[],L=0;L<M;L++){if(g&&u.length>1&&(w>0&&L==g||0==w&&0==L)&&"equal"==C){var S=M-(0==w?1:2)*g;if(S>1){if(N.push(v=document.createElement("tr")),y+=S,E+=S,L+=S-1,v.appendChild(n("th","...")),m||v.appendChild(a("td","skip","")),v.appendChild(n("th","...")),v.appendChild(a("td","skip","")),w+1==u.length)break;continue}}if(N.push(v=document.createElement("tr")),m)"insert"==C?c(v,null,E++,h,C):"replace"==C?(O.push(_=document.createElement("tr")),y<T&&c(v,y++,null,d,"delete"),E<q&&c(_,null,E++,h,"insert")):"delete"==C?c(v,y++,null,d,C):c(v,y++,E++,d,C);else if("replace"===C){var P=new r.SequenceMatcher(d[y],h[E]);if(T-y==q-E&&P.ratio()>.6){for(var j=P.get_opcodes(),A="",B="",U=0;U<j.length;U++)for(var $=j[U],z=$[0],H=$[1],I=$[2],F=$[3],J=$[4],R=Math.max(I-H,J-F),W=d[y].split(""),D=h[E].split(""),V=0;V<R;V++)"insert"==z?(A.match(/<\/ins>$/)?A=A.slice(0,-6):A+='<ins class="diff">',A+=i(D[F++]||""),A+="</ins>"):"replace"==z?(H<I&&(B.match(/<\/del>$/)?B=B.slice(0,-6):B+='<del class="diff">',B+=i(W[H++]||""),B+="</del>"),F<J&&(A.match(/<\/ins>$/)?A=A.slice(0,-6):A+='<ins class="diff">',A+=i(D[F++]||""),A+="</ins>")):"delete"==z?(B.match(/<\/del>$/)?B=B.slice(0,-6):B+='<del class="diff">',B+=i(W[F++]||""),B+="</del>"):(B+=i(W[H]||""),A+=i(W[H++]||""));y=o(v,y,T,B,C),E=o(v,E,q,A,C)}else y=s(v,y,T,d,C,L),E=s(v,E,q,h,C)}else y=s(v,y,T,d,C,L),E=s(v,E,q,h,C)}for(var L=0;L<N.length;L++)x.push(N[L]);for(var L=0;L<O.length;L++)x.push(O[L])}b.push(v=document.createElement("tbody"));for(var w in x)x.hasOwnProperty(w)&&v.appendChild(x[w]);v=t("table","diff"+(m?" inlinediff":""));for(var w in b)b.hasOwnProperty(w)&&v.appendChild(b[w]);return v}};e.exports=a},89:function(e,t,n){"use strict";function r(e){var t=""+e,n=i.exec(t);if(!n)return t;var r,a="",l=0,s=0;for(l=n.index;l<t.length;l++){switch(t.charCodeAt(l)){case 34:r="&quot;";break;case 38:r="&amp;";break;case 39:r="&#39;";break;case 60:r="&lt;";break;case 62:r="&gt;";break;default:continue}s!==l&&(a+=t.substring(s,l)),s=l+1,a+=r}return s!==l?a+t.substring(s,l):a}var i=/["'&<>]/;e.exports=r},90:function(e,t){e.exports="(function dom__init() {\n    'use strict';\n\n    var MIN_ROWS_TO_HIDE = 5;\n    var nextUntil = function nextUntil(element, predicate) {\n        var next = [];\n        var el = element;\n\n        while (el.nextSibling && !predicate(el.nextSibling)) {\n            el = el.nextSibling;\n            next.push(el);\n        }\n\n        return next;\n    };\n\n    // namespace to test for web browser features for progressive enhancement\n    // namespace for event handlers\n    var event = {\n        // allows visual folding of consecutive equal lines in a diff report\n        difffold: function dom__event_difffold() {\n            var row = this.parentNode;\n            var rows;\n\n            if (row.classList.contains('folded')) {\n                row.classList.remove('folded');\n                this.textContent = this.textContent.replace('+', '-');\n\n                rows = nextUntil(row, function(r) {\n                    if (r.style.display === 'none') {\n                        return false;\n                    }\n                    return true;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'table-row';\n                });\n            } else {\n                row.classList.add('folded');\n                this.textContent = this.textContent.replace('-', '+');\n\n                rows = nextUntil(row, function(r) {\n                    var ths = r.getElementsByTagName('th');\n\n                    if (ths && ths.length) {\n                        var cls = ths[0].className;\n\n                        if (cls && !cls.match('equal')) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'none';\n                });\n            }\n        }\n    };\n\n    // alter tool on page load in reflection to saved state\n    var load = function () {\n        var difflist = document.getElementsByTagName('table');\n\n        if (!difflist.length) {\n            return;\n        }\n        var cells = difflist[0].getElementsByTagName('th');\n        var len = cells.length;\n        var a = 0;\n\n        for (a = 0; a < len; a += 1) {\n            if (cells[a].getAttribute('class') && cells[a].getAttribute('class').match(/fold/)) {\n                cells[a].onclick = event.difffold;\n                if (cells[a].getAttribute('class').match(/equal/)) {\n                    var rows = nextUntil(cells[a].parentNode, function(r) {\n                        var ths = r.getElementsByTagName('th');\n\n                        if (ths && ths.length) {\n                            var cls = ths[0].className;\n\n                            if (cls && !cls.match('equal')) {\n                                return true;\n                            }\n                        }\n\n                        return false;\n                    });\n\n                    if (rows.length > MIN_ROWS_TO_HIDE) {\n                        cells[a].onclick();\n                    } else {\n                        cells[a].classList.remove('fold');\n                        cells[a].textContent = cells[a].textContent.replace('- ', '');\n                    }\n                }\n            }\n        }\n    };\n\n    window.onload = load;\n})();\n"}});