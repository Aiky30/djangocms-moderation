moderationWebpackJsonp([0],{83:function(n,e,t){"use strict";function r(n,e){var t=h.a.stringAsLines(n),r=h.a.stringAsLines(e),i=new h.a.SequenceMatcher(t,r),a=i.get_opcodes();return o.a.buildView({baseTextLines:t,newTextLines:r,opcodes:a,baseTextName:"Published",newTextName:"Current",contextSize:null,viewType:0}).outerHTML}Object.defineProperty(e,"__esModule",{value:!0});var i=t(84),a=t.n(i),l=t(85),o=t.n(l),s=t(86),h=t.n(s),c=t(87),d=t.n(c);e.default={diff:r,styles:a.a,js:d.a}},84:function(n,e){n.exports='* {\n    box-sizing: border-box;\n}\n\nbody {\n  padding: 0px;\n  margin: 0;\n}\n\n.texttitle {\n    text-align: left;\n    padding-top: 20px;\n    padding-bottom: 10px;\n}\ntable {\n    width: 100%;\n    font-size: 12px;\n    line-height: 20px;\n    color: #032f62;\n    border-collapse: collapse;\n    border: 0;\n    font-family: "SFMono-Regular",\n        Consolas,\n        "Liberation Mono",\n        Menlo,\n        Courier,\n        monospace;\n}\nth {\n    min-width: 50px;\n    white-space: nowrap;\n}\nth,\ntd {\n    vertical-align: top;\n    padding: 0 10px;\n}\nth:not(.texttitle) {\n    text-align: right;\n    color: rgba(27, 31, 35, 0.3);\n    font-weight: normal;\n}\ntd + th {\n    border-left: 1px solid #f6f8fa;\n}\ntd {\n    word-break: break-all;\n    white-space: pre-wrap;\n}\ntd.replace,\ntd.delete {\n    background: #ffeef0;\n}\ntd.replace ~ td.replace,\ntd.insert {\n    background: #e6ffed;\n}\n\nth.replace,\nth.delete {\n    background-color: #ffdce0;\n}\nth.replace ~ th.replace,\nth.insert {\n    background-color: #cdffd8;\n}\n.empty {\n    background: #fafbfc;\n}\n\n.fold {\n    cursor: pointer;\n}\n.folded td, .folded th {\n    /* background-color: #f1f8ff; */\n    background-color: #f7f7f7;\n}\n.folded td {\n    color: rgba(0,0,0,0.3);\n}\n.folded th.fold {\n    /* background-color: #dbedff; */\n    background-color: #ededed;\n}\n'},85:function(n,e){var t={buildView:function(n){function e(n,e){var t=document.createElement(n);return t.className=e,t}function t(n,e){var t=document.createElement(n);return t.appendChild(document.createTextNode(e)),t}function r(n,e,t){var r=document.createElement(n);return r.className=e,r.appendChild(document.createTextNode(t)),r}function i(n,t,i,a,l,o){return t<i?("equal"===l&&0===o?(n.appendChild(r("th",l+" fold","- "+(t+1).toString())),n.appendChild(r("td",l,a[t].replace(/\t/g,"    ")))):(n.appendChild(r("th",l,(t+1).toString())),n.appendChild(r("td",l,a[t].replace(/\t/g,"    ")))),t+1):(n.appendChild(e("th","empty")),n.appendChild(e("td","empty")),t)}function a(n,e,i,a,l){n.appendChild(t("th",null==e?"":(e+1).toString())),n.appendChild(t("th",null==i?"":(i+1).toString())),n.appendChild(r("td",l,a[null!=e?e:i].replace(/\t/g,"    ")))}var l=n.baseTextLines,o=n.newTextLines,s=n.opcodes,h=n.baseTextName?n.baseTextName:"Base Text",c=n.newTextName?n.newTextName:"New Text",d=n.contextSize,u=0==n.viewType||1==n.viewType?n.viewType:0;if(null==l)throw new Error("Cannot build diff view; baseTextLines is not defined.");if(null==o)throw new Error("Cannot build diff view; newTextLines is not defined.");if(!s)throw new Error("Cannot build diff view; opcodes is not defined.");var f=document.createElement("thead"),p=document.createElement("tr");f.appendChild(p),u?(p.appendChild(document.createElement("th")),p.appendChild(document.createElement("th")),p.appendChild(r("th","texttitle",h+" vs. "+c))):(p.appendChild(document.createElement("th")),p.appendChild(r("th","texttitle",h)),p.appendChild(document.createElement("th")),p.appendChild(r("th","texttitle",c))),f=[f];for(var g,m=[],b=0;b<s.length;b++){for(var _=s[b],v=_[0],w=_[1],x=_[2],k=_[3],C=_[4],y=Math.max(x-w,C-k),T=[],E=[],q=0;q<y;q++){if(d&&s.length>1&&(b>0&&q==d||0==b&&0==q)&&"equal"==v){var N=y-(0==b?1:2)*d;if(N>1){if(T.push(p=document.createElement("tr")),w+=N,k+=N,q+=N-1,p.appendChild(t("th","...")),u||p.appendChild(r("td","skip","")),p.appendChild(t("th","...")),p.appendChild(r("td","skip","")),b+1==s.length)break;continue}}T.push(p=document.createElement("tr")),u?"insert"==v?a(p,null,k++,o,v):"replace"==v?(E.push(g=document.createElement("tr")),w<x&&a(p,w++,null,l,"delete"),k<C&&a(g,null,k++,o,"insert")):"delete"==v?a(p,w++,null,l,v):a(p,w++,k++,l,v):(w=i(p,w,x,l,v,q),k=i(p,k,C,o,v))}for(var q=0;q<T.length;q++)m.push(T[q]);for(var q=0;q<E.length;q++)m.push(E[q])}m.push(p=r("th","author","diff view generated by ")),p.setAttribute("colspan",u?3:4),p.appendChild(g=t("a","jsdifflib")),g.setAttribute("href","http://github.com/cemerick/jsdifflib"),f.push(p=document.createElement("tbody"));for(var b in m)m.hasOwnProperty(b)&&p.appendChild(m[b]);p=e("table","diff"+(u?" inlinediff":""));for(var b in f)f.hasOwnProperty(b)&&p.appendChild(f[b]);return p}};n.exports=t},86:function(n,e){var t={" ":!0,"\t":!0,"\n":!0,"\f":!0,"\r":!0},r={defaultJunkFunction:function(n){return t.hasOwnProperty(n)},stripLinebreaks:function(n){return n.replace(/^[\n\r]*|[\n\r]*$/g,"")},stringAsLines:function(n){for(var e=n.indexOf("\n"),t=n.indexOf("\r"),i=e>-1&&t>-1||t<0?"\n":"\r",a=n.split(i),l=0;l<a.length;l++)a[l]=r.stripLinebreaks(a[l]);return a},__reduce:function(n,e,t){if(null!=t)var r=t,i=0;else{if(!e)return null;var r=e[0],i=1}for(;i<e.length;i++)r=n(r,e[i]);return r},__ntuplecomp:function(n,e){for(var t=Math.max(n.length,e.length),r=0;r<t;r++){if(n[r]<e[r])return-1;if(n[r]>e[r])return 1}return n.length==e.length?0:n.length<e.length?-1:1},__calculate_ratio:function(n,e){return e?2*n/e:1},__isindict:function(n){return function(e){return n.hasOwnProperty(e)}},__dictget:function(n,e,t){return n.hasOwnProperty(e)?n[e]:t},SequenceMatcher:function(n,e,t){this.set_seqs=function(n,e){this.set_seq1(n),this.set_seq2(e)},this.set_seq1=function(n){n!=this.a&&(this.a=n,this.matching_blocks=this.opcodes=null)},this.set_seq2=function(n){n!=this.b&&(this.b=n,this.matching_blocks=this.opcodes=this.fullbcount=null,this.__chain_b())},this.__chain_b=function(){for(var n=this.b,e=n.length,t=this.b2j={},i={},a=0;a<n.length;a++){var l=n[a];if(t.hasOwnProperty(l)){var o=t[l];e>=200&&100*o.length>e?(i[l]=1,delete t[l]):o.push(a)}else t[l]=[a]}for(var l in i)i.hasOwnProperty(l)&&delete t[l];var s=this.isjunk,h={};if(s){for(var l in i)i.hasOwnProperty(l)&&s(l)&&(h[l]=1,delete i[l]);for(var l in t)t.hasOwnProperty(l)&&s(l)&&(h[l]=1,delete t[l])}this.isbjunk=r.__isindict(h),this.isbpopular=r.__isindict(i)},this.find_longest_match=function(n,e,t,i){for(var a,l=this.a,o=this.b,s=this.b2j,h=this.isbjunk,c=n,d=t,u=0,f=null,p={},g=[],m=n;m<e;m++){var b={},_=r.__dictget(s,l[m],g);for(var v in _)if(_.hasOwnProperty(v)){if((f=_[v])<t)continue;if(f>=i)break;b[f]=a=r.__dictget(p,f-1,0)+1,a>u&&(c=m-a+1,d=f-a+1,u=a)}p=b}for(;c>n&&d>t&&!h(o[d-1])&&l[c-1]==o[d-1];)c--,d--,u++;for(;c+u<e&&d+u<i&&!h(o[d+u])&&l[c+u]==o[d+u];)u++;for(;c>n&&d>t&&h(o[d-1])&&l[c-1]==o[d-1];)c--,d--,u++;for(;c+u<e&&d+u<i&&h(o[d+u])&&l[c+u]==o[d+u];)u++;return[c,d,u]},this.get_matching_blocks=function(){if(null!=this.matching_blocks)return this.matching_blocks;for(var n,e,t,i,a,l,o,s,h,c=this.a.length,d=this.b.length,u=[[0,c,0,d]],f=[];u.length;)a=u.pop(),n=a[0],e=a[1],t=a[2],i=a[3],h=this.find_longest_match(n,e,t,i),l=h[0],o=h[1],(s=h[2])&&(f.push(h),n<l&&t<o&&u.push([n,l,t,o]),l+s<e&&o+s<i&&u.push([l+s,e,o+s,i]));f.sort(r.__ntuplecomp);var p,g,m,b=0,_=0,v=0,w=0,x=[];for(var k in f)f.hasOwnProperty(k)&&(w=f[k],p=w[0],g=w[1],m=w[2],b+v==p&&_+v==g?v+=m:(v&&x.push([b,_,v]),b=p,_=g,v=m));return v&&x.push([b,_,v]),x.push([c,d,0]),this.matching_blocks=x,this.matching_blocks},this.get_opcodes=function(){if(null!=this.opcodes)return this.opcodes;var n=0,e=0,t=[];this.opcodes=t;var r,i,a,l,o,s=this.get_matching_blocks();for(var h in s)s.hasOwnProperty(h)&&(r=s[h],i=r[0],a=r[1],l=r[2],o="",n<i&&e<a?o="replace":n<i?o="delete":e<a&&(o="insert"),o&&t.push([o,n,i,e,a]),n=i+l,e=a+l,l&&t.push(["equal",i,n,a,e]));return t},this.get_grouped_opcodes=function(n){n||(n=3);var e=this.get_opcodes();e||(e=[["equal",0,1,0,1]]);var t,r,i,a,l,o;"equal"==e[0][0]&&(t=e[0],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],e[0]=[r,Math.max(i,a-n),a,Math.max(l,o-n),o]),"equal"==e[e.length-1][0]&&(t=e[e.length-1],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],e[e.length-1]=[r,i,Math.min(a,i+n),l,Math.min(o,l+n)]);var s=n+n,h=[],c=[];for(var d in e)e.hasOwnProperty(d)&&(t=e[d],r=t[0],i=t[1],a=t[2],l=t[3],o=t[4],"equal"==r&&a-i>s&&(h.push([r,i,Math.min(a,i+n),l,Math.min(o,l+n)]),c.push(h),h=[],i=Math.max(i,a-n),l=Math.max(l,o-n)),h.push([r,i,a,l,o]));return!h||1==h.length&&"equal"==h[0][0]||c.push(h),c},this.ratio=function(){return matches=r.__reduce(function(n,e){return n+e[e.length-1]},this.get_matching_blocks(),0),r.__calculate_ratio(matches,this.a.length+this.b.length)},this.quick_ratio=function(){var n,e;if(null==this.fullbcount){this.fullbcount=n={};for(var t=0;t<this.b.length;t++)e=this.b[t],n[e]=r.__dictget(n,e,0)+1}n=this.fullbcount;for(var i={},a=r.__isindict(i),l=numb=0,t=0;t<this.a.length;t++)e=this.a[t],a(e)?numb=i[e]:numb=r.__dictget(n,e,0),i[e]=numb-1,numb>0&&l++;return r.__calculate_ratio(l,this.a.length+this.b.length)},this.real_quick_ratio=function(){var n=this.a.length,e=this.b.length;return _calculate_ratio(Math.min(n,e),n+e)},this.isjunk=t||r.defaultJunkFunction,this.a=this.b=null,this.set_seqs(n,e)}};n.exports=r},87:function(n,e){n.exports="(function dom__init() {\n    'use strict';\n\n    var MIN_ROWS_TO_HIDE = 5;\n    var nextUntil = function nextUntil(element, predicate) {\n        var next = [];\n        var el = element;\n\n        while (el.nextSibling && !predicate(el.nextSibling)) {\n            el = el.nextSibling;\n            next.push(el);\n        }\n\n        return next;\n    };\n\n    // namespace to test for web browser features for progressive enhancement\n    // namespace for event handlers\n    var event = {\n        // allows visual folding of consecutive equal lines in a diff report\n        difffold: function dom__event_difffold() {\n            var row = this.parentNode;\n            var rows;\n\n            if (row.classList.contains('folded')) {\n                row.classList.remove('folded');\n                this.textContent = this.textContent.replace('+', '-');\n\n                rows = nextUntil(row, function(r) {\n                    if (r.style.display === 'none') {\n                        return false;\n                    }\n                    return true;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'table-row';\n                });\n            } else {\n                row.classList.add('folded');\n                this.textContent = this.textContent.replace('-', '+');\n\n                rows = nextUntil(row, function(r) {\n                    var ths = r.getElementsByTagName('th');\n\n                    if (ths && ths.length) {\n                        var cls = ths[0].className;\n\n                        if (cls && !cls.match('equal')) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                });\n\n                rows.forEach(function(r) {\n                    r.style.display = 'none';\n                });\n            }\n        }\n    };\n\n    // alter tool on page load in reflection to saved state\n    var load = function () {\n        var difflist = document.getElementsByTagName('table');\n\n        if (!difflist.length) {\n            return;\n        }\n        var cells = difflist[0].getElementsByTagName('th');\n        var len = cells.length;\n        var a = 0;\n\n        for (a = 0; a < len; a += 1) {\n            if (cells[a].getAttribute('class') && cells[a].getAttribute('class').match(/fold/)) {\n                cells[a].onclick = event.difffold;\n                if (cells[a].getAttribute('class').match(/equal/)) {\n                    var rows = nextUntil(cells[a].parentNode, function(r) {\n                        var ths = r.getElementsByTagName('th');\n\n                        if (ths && ths.length) {\n                            var cls = ths[0].className;\n\n                            if (cls && !cls.match('equal')) {\n                                return true;\n                            }\n                        }\n\n                        return false;\n                    });\n\n                    if (rows.length > MIN_ROWS_TO_HIDE) {\n                        cells[a].onclick();\n                    } else {\n                        cells[a].classList.remove('fold');\n                        cells[a].textContent = cells[a].textContent.replace('- ', '');\n                    }\n                }\n            }\n        }\n    };\n\n    window.onload = load;\n})();\n"}});